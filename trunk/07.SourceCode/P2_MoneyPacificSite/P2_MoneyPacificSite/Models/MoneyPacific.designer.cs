#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace P2_MoneyPacificSite.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MoneyPacific")]
	public partial class MoneyPacificDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertTransactionStatus(TransactionStatus instance);
    partial void UpdateTransactionStatus(TransactionStatus instance);
    partial void DeleteTransactionStatus(TransactionStatus instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomerStatus(CustomerStatus instance);
    partial void UpdateCustomerStatus(CustomerStatus instance);
    partial void DeleteCustomerStatus(CustomerStatus instance);
    partial void InsertPacificCode(PacificCode instance);
    partial void UpdatePacificCode(PacificCode instance);
    partial void DeletePacificCode(PacificCode instance);
    partial void InsertPacificCodeStatus(PacificCodeStatus instance);
    partial void UpdatePacificCodeStatus(PacificCodeStatus instance);
    partial void DeletePacificCodeStatus(PacificCodeStatus instance);
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    partial void InsertStoreStatus(StoreStatus instance);
    partial void UpdateStoreStatus(StoreStatus instance);
    partial void DeleteStoreStatus(StoreStatus instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    #endregion
		
		public MoneyPacificDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MoneyPacificConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MoneyPacificDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MoneyPacificDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MoneyPacificDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MoneyPacificDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<TransactionStatus> TransactionStatus
		{
			get
			{
				return this.GetTable<TransactionStatus>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerStatus> CustomerStatus
		{
			get
			{
				return this.GetTable<CustomerStatus>();
			}
		}
		
		public System.Data.Linq.Table<PacificCode> PacificCodes
		{
			get
			{
				return this.GetTable<PacificCode>();
			}
		}
		
		public System.Data.Linq.Table<PacificCodeStatus> PacificCodeStatus
		{
			get
			{
				return this.GetTable<PacificCodeStatus>();
			}
		}
		
		public System.Data.Linq.Table<Store> Stores
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
		
		public System.Data.Linq.Table<StoreStatus> StoreStatus
		{
			get
			{
				return this.GetTable<StoreStatus>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Value;
		
		private System.Nullable<bool> _Active;
		
		private string _Description;
		
		private EntitySet<PacificCode> _PacificCodes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Category()
		{
			this._PacificCodes = new EntitySet<PacificCode>(new Action<PacificCode>(this.attach_PacificCodes), new Action<PacificCode>(this.detach_PacificCodes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_PacificCode", Storage="_PacificCodes", ThisKey="Id", OtherKey="CateID")]
		public EntitySet<PacificCode> PacificCodes
		{
			get
			{
				return this._PacificCodes;
			}
			set
			{
				this._PacificCodes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PacificCodes(PacificCode entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_PacificCodes(PacificCode entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionStatus")]
	public partial class TransactionStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private string _Description;
		
		private EntitySet<Transaction> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TransactionStatus()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NChar(20)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionStatus_Transaction", Storage="_Transactions", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionStatus = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Phone;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _LastDate;
		
		private string _CurrentPacificCoded;
		
		private System.Nullable<int> _TotalAmount;
		
		private System.Nullable<int> _NumberTransaction;
		
		private System.Nullable<int> _BadTransaction;
		
		private string _SecurCode;
		
		private string _Pincode;
		
		private System.Nullable<int> _StatusID;
		
		private EntitySet<PacificCode> _PacificCodes;
		
		private EntityRef<CustomerStatus> _CustomerStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDateChanged();
    partial void OnCurrentPacificCodedChanging(string value);
    partial void OnCurrentPacificCodedChanged();
    partial void OnTotalAmountChanging(System.Nullable<int> value);
    partial void OnTotalAmountChanged();
    partial void OnNumberTransactionChanging(System.Nullable<int> value);
    partial void OnNumberTransactionChanged();
    partial void OnBadTransactionChanging(System.Nullable<int> value);
    partial void OnBadTransactionChanged();
    partial void OnSecurCodeChanging(string value);
    partial void OnSecurCodeChanged();
    partial void OnPincodeChanging(string value);
    partial void OnPincodeChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    #endregion
		
		public Customer()
		{
			this._PacificCodes = new EntitySet<PacificCode>(new Action<PacificCode>(this.attach_PacificCodes), new Action<PacificCode>(this.detach_PacificCodes));
			this._CustomerStatus = default(EntityRef<CustomerStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="Date")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDate", DbType="Date")]
		public System.Nullable<System.DateTime> LastDate
		{
			get
			{
				return this._LastDate;
			}
			set
			{
				if ((this._LastDate != value))
				{
					this.OnLastDateChanging(value);
					this.SendPropertyChanging();
					this._LastDate = value;
					this.SendPropertyChanged("LastDate");
					this.OnLastDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPacificCoded", DbType="NChar(10)")]
		public string CurrentPacificCoded
		{
			get
			{
				return this._CurrentPacificCoded;
			}
			set
			{
				if ((this._CurrentPacificCoded != value))
				{
					this.OnCurrentPacificCodedChanging(value);
					this.SendPropertyChanging();
					this._CurrentPacificCoded = value;
					this.SendPropertyChanged("CurrentPacificCoded");
					this.OnCurrentPacificCodedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Int")]
		public System.Nullable<int> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTransaction", DbType="Int")]
		public System.Nullable<int> NumberTransaction
		{
			get
			{
				return this._NumberTransaction;
			}
			set
			{
				if ((this._NumberTransaction != value))
				{
					this.OnNumberTransactionChanging(value);
					this.SendPropertyChanging();
					this._NumberTransaction = value;
					this.SendPropertyChanged("NumberTransaction");
					this.OnNumberTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadTransaction", DbType="Int")]
		public System.Nullable<int> BadTransaction
		{
			get
			{
				return this._BadTransaction;
			}
			set
			{
				if ((this._BadTransaction != value))
				{
					this.OnBadTransactionChanging(value);
					this.SendPropertyChanging();
					this._BadTransaction = value;
					this.SendPropertyChanged("BadTransaction");
					this.OnBadTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurCode", DbType="NVarChar(50)")]
		public string SecurCode
		{
			get
			{
				return this._SecurCode;
			}
			set
			{
				if ((this._SecurCode != value))
				{
					this.OnSecurCodeChanging(value);
					this.SendPropertyChanging();
					this._SecurCode = value;
					this.SendPropertyChanged("SecurCode");
					this.OnSecurCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pincode", DbType="NVarChar(50)")]
		public string Pincode
		{
			get
			{
				return this._Pincode;
			}
			set
			{
				if ((this._Pincode != value))
				{
					this.OnPincodeChanging(value);
					this.SendPropertyChanging();
					this._Pincode = value;
					this.SendPropertyChanged("Pincode");
					this.OnPincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._CustomerStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_PacificCode", Storage="_PacificCodes", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<PacificCode> PacificCodes
		{
			get
			{
				return this._PacificCodes;
			}
			set
			{
				this._PacificCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerStatus_Customer", Storage="_CustomerStatus", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public CustomerStatus CustomerStatus
		{
			get
			{
				return this._CustomerStatus.Entity;
			}
			set
			{
				CustomerStatus previousValue = this._CustomerStatus.Entity;
				if (((previousValue != value) 
							|| (this._CustomerStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerStatus.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._CustomerStatus.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PacificCodes(PacificCode entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_PacificCodes(PacificCode entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerStatus")]
	public partial class CustomerStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private string _Description;
		
		private System.Nullable<bool> _IsLocked;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsLockedChanging(System.Nullable<bool> value);
    partial void OnIsLockedChanged();
    #endregion
		
		public CustomerStatus()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NChar(10)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit")]
		public System.Nullable<bool> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerStatus_Customer", Storage="_Customers", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerStatus = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PacificCode")]
	public partial class PacificCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CodeNumber;
		
		private System.Nullable<int> _LastTransaction;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<int> _StoreID;
		
		private System.Nullable<int> _CateID;
		
		private System.Nullable<int> _InitialAmount;
		
		private System.Nullable<int> _ActualAmount;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<System.DateTime> _LastDate;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private string _Comment;
		
		private System.Nullable<int> _StatusID;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<PacificCodeStatus> _PacificCodeStatus;
		
		private EntityRef<Store> _Store;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeNumberChanging(string value);
    partial void OnCodeNumberChanged();
    partial void OnLastTransactionChanging(System.Nullable<int> value);
    partial void OnLastTransactionChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnStoreIDChanging(System.Nullable<int> value);
    partial void OnStoreIDChanged();
    partial void OnCateIDChanging(System.Nullable<int> value);
    partial void OnCateIDChanged();
    partial void OnInitialAmountChanging(System.Nullable<int> value);
    partial void OnInitialAmountChanged();
    partial void OnActualAmountChanging(System.Nullable<int> value);
    partial void OnActualAmountChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnLastDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDateChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    #endregion
		
		public PacificCode()
		{
			this._Category = default(EntityRef<Category>);
			this._Customer = default(EntityRef<Customer>);
			this._PacificCodeStatus = default(EntityRef<PacificCodeStatus>);
			this._Store = default(EntityRef<Store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeNumber", DbType="NChar(20)")]
		public string CodeNumber
		{
			get
			{
				return this._CodeNumber;
			}
			set
			{
				if ((this._CodeNumber != value))
				{
					this.OnCodeNumberChanging(value);
					this.SendPropertyChanging();
					this._CodeNumber = value;
					this.SendPropertyChanged("CodeNumber");
					this.OnCodeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTransaction", DbType="Int")]
		public System.Nullable<int> LastTransaction
		{
			get
			{
				return this._LastTransaction;
			}
			set
			{
				if ((this._LastTransaction != value))
				{
					this.OnLastTransactionChanging(value);
					this.SendPropertyChanging();
					this._LastTransaction = value;
					this.SendPropertyChanged("LastTransaction");
					this.OnLastTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int")]
		public System.Nullable<int> StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CateID", DbType="Int")]
		public System.Nullable<int> CateID
		{
			get
			{
				return this._CateID;
			}
			set
			{
				if ((this._CateID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCateIDChanging(value);
					this.SendPropertyChanging();
					this._CateID = value;
					this.SendPropertyChanged("CateID");
					this.OnCateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialAmount", DbType="Int")]
		public System.Nullable<int> InitialAmount
		{
			get
			{
				return this._InitialAmount;
			}
			set
			{
				if ((this._InitialAmount != value))
				{
					this.OnInitialAmountChanging(value);
					this.SendPropertyChanging();
					this._InitialAmount = value;
					this.SendPropertyChanged("InitialAmount");
					this.OnInitialAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualAmount", DbType="Int")]
		public System.Nullable<int> ActualAmount
		{
			get
			{
				return this._ActualAmount;
			}
			set
			{
				if ((this._ActualAmount != value))
				{
					this.OnActualAmountChanging(value);
					this.SendPropertyChanging();
					this._ActualAmount = value;
					this.SendPropertyChanged("ActualAmount");
					this.OnActualAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDate", DbType="Date")]
		public System.Nullable<System.DateTime> LastDate
		{
			get
			{
				return this._LastDate;
			}
			set
			{
				if ((this._LastDate != value))
				{
					this.OnLastDateChanging(value);
					this.SendPropertyChanging();
					this._LastDate = value;
					this.SendPropertyChanged("LastDate");
					this.OnLastDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if ((this._PacificCodeStatus.HasLoadedOrAssignedValue || this._Store.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_PacificCode", Storage="_Category", ThisKey="CateID", OtherKey="Id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.PacificCodes.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.PacificCodes.Add(this);
						this._CateID = value.Id;
					}
					else
					{
						this._CateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_PacificCode", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.PacificCodes.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.PacificCodes.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PacificCodeStatus_PacificCode", Storage="_PacificCodeStatus", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public PacificCodeStatus PacificCodeStatus
		{
			get
			{
				return this._PacificCodeStatus.Entity;
			}
			set
			{
				PacificCodeStatus previousValue = this._PacificCodeStatus.Entity;
				if (((previousValue != value) 
							|| (this._PacificCodeStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PacificCodeStatus.Entity = null;
						previousValue.PacificCodes.Remove(this);
					}
					this._PacificCodeStatus.Entity = value;
					if ((value != null))
					{
						value.PacificCodes.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PacificCodeStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_PacificCode", Storage="_Store", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.PacificCodes.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.PacificCodes.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PacificCodeStatus")]
	public partial class PacificCodeStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private string _Description;
		
		private EntitySet<PacificCode> _PacificCodes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public PacificCodeStatus()
		{
			this._PacificCodes = new EntitySet<PacificCode>(new Action<PacificCode>(this.attach_PacificCodes), new Action<PacificCode>(this.detach_PacificCodes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NChar(10)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PacificCodeStatus_PacificCode", Storage="_PacificCodes", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<PacificCode> PacificCodes
		{
			get
			{
				return this._PacificCodes;
			}
			set
			{
				this._PacificCodes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PacificCodes(PacificCode entity)
		{
			this.SendPropertyChanging();
			entity.PacificCodeStatus = this;
		}
		
		private void detach_PacificCodes(PacificCode entity)
		{
			this.SendPropertyChanging();
			entity.PacificCodeStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Store")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Phone;
		
		private string _PassStore;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _LastDate;
		
		private System.Nullable<int> _LastTransaction;
		
		private System.Nullable<int> _NumberSales;
		
		private System.Nullable<double> _TotalSales;
		
		private string _Comment;
		
		private string _Address;
		
		private string _Name;
		
		private string _Email;
		
		private System.Nullable<int> _StatusID;
		
		private EntitySet<PacificCode> _PacificCodes;
		
		private EntityRef<StoreStatus> _StoreStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPassStoreChanging(string value);
    partial void OnPassStoreChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDateChanged();
    partial void OnLastTransactionChanging(System.Nullable<int> value);
    partial void OnLastTransactionChanged();
    partial void OnNumberSalesChanging(System.Nullable<int> value);
    partial void OnNumberSalesChanged();
    partial void OnTotalSalesChanging(System.Nullable<double> value);
    partial void OnTotalSalesChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    #endregion
		
		public Store()
		{
			this._PacificCodes = new EntitySet<PacificCode>(new Action<PacificCode>(this.attach_PacificCodes), new Action<PacificCode>(this.detach_PacificCodes));
			this._StoreStatus = default(EntityRef<StoreStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassStore", DbType="NVarChar(50)")]
		public string PassStore
		{
			get
			{
				return this._PassStore;
			}
			set
			{
				if ((this._PassStore != value))
				{
					this.OnPassStoreChanging(value);
					this.SendPropertyChanging();
					this._PassStore = value;
					this.SendPropertyChanged("PassStore");
					this.OnPassStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="Date")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDate", DbType="Date")]
		public System.Nullable<System.DateTime> LastDate
		{
			get
			{
				return this._LastDate;
			}
			set
			{
				if ((this._LastDate != value))
				{
					this.OnLastDateChanging(value);
					this.SendPropertyChanging();
					this._LastDate = value;
					this.SendPropertyChanged("LastDate");
					this.OnLastDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTransaction", DbType="Int")]
		public System.Nullable<int> LastTransaction
		{
			get
			{
				return this._LastTransaction;
			}
			set
			{
				if ((this._LastTransaction != value))
				{
					this.OnLastTransactionChanging(value);
					this.SendPropertyChanging();
					this._LastTransaction = value;
					this.SendPropertyChanged("LastTransaction");
					this.OnLastTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberSales", DbType="Int")]
		public System.Nullable<int> NumberSales
		{
			get
			{
				return this._NumberSales;
			}
			set
			{
				if ((this._NumberSales != value))
				{
					this.OnNumberSalesChanging(value);
					this.SendPropertyChanging();
					this._NumberSales = value;
					this.SendPropertyChanged("NumberSales");
					this.OnNumberSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSales", DbType="Float")]
		public System.Nullable<double> TotalSales
		{
			get
			{
				return this._TotalSales;
			}
			set
			{
				if ((this._TotalSales != value))
				{
					this.OnTotalSalesChanging(value);
					this.SendPropertyChanging();
					this._TotalSales = value;
					this.SendPropertyChanged("TotalSales");
					this.OnTotalSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._StoreStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_PacificCode", Storage="_PacificCodes", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<PacificCode> PacificCodes
		{
			get
			{
				return this._PacificCodes;
			}
			set
			{
				this._PacificCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreStatus_Store", Storage="_StoreStatus", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public StoreStatus StoreStatus
		{
			get
			{
				return this._StoreStatus.Entity;
			}
			set
			{
				StoreStatus previousValue = this._StoreStatus.Entity;
				if (((previousValue != value) 
							|| (this._StoreStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreStatus.Entity = null;
						previousValue.Stores.Remove(this);
					}
					this._StoreStatus.Entity = value;
					if ((value != null))
					{
						value.Stores.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PacificCodes(PacificCode entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_PacificCodes(PacificCode entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreStatus")]
	public partial class StoreStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private string _Description;
		
		private EntitySet<Store> _Stores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public StoreStatus()
		{
			this._Stores = new EntitySet<Store>(new Action<Store>(this.attach_Stores), new Action<Store>(this.detach_Stores));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NChar(10)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreStatus_Store", Storage="_Stores", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<Store> Stores
		{
			get
			{
				return this._Stores;
			}
			set
			{
				this._Stores.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stores(Store entity)
		{
			this.SendPropertyChanging();
			entity.StoreStatus = this;
		}
		
		private void detach_Stores(Store entity)
		{
			this.SendPropertyChanging();
			entity.StoreStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Transaction]")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _IDTransaction;
		
		private string _Origine;
		
		private System.Nullable<int> _Amount;
		
		private System.Nullable<int> _StoreID;
		
		private string _StorePhone;
		
		private System.Nullable<int> _CustomerID;
		
		private string _CustomerPhone;
		
		private System.Nullable<int> _PacificCodeID;
		
		private string _PacificCode;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _IPTime;
		
		private string _SMS;
		
		private System.Nullable<int> _StatusID;
		
		private EntityRef<TransactionStatus> _TransactionStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnIDTransactionChanging(string value);
    partial void OnIDTransactionChanged();
    partial void OnOrigineChanging(string value);
    partial void OnOrigineChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnStoreIDChanging(System.Nullable<int> value);
    partial void OnStoreIDChanged();
    partial void OnStorePhoneChanging(string value);
    partial void OnStorePhoneChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerPhoneChanging(string value);
    partial void OnCustomerPhoneChanged();
    partial void OnPacificCodeIDChanging(System.Nullable<int> value);
    partial void OnPacificCodeIDChanged();
    partial void OnPacificCodeChanging(string value);
    partial void OnPacificCodeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnIPTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnIPTimeChanged();
    partial void OnSMSChanging(string value);
    partial void OnSMSChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    #endregion
		
		public Transaction()
		{
			this._TransactionStatus = default(EntityRef<TransactionStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="Date")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTransaction", DbType="NChar(10)")]
		public string IDTransaction
		{
			get
			{
				return this._IDTransaction;
			}
			set
			{
				if ((this._IDTransaction != value))
				{
					this.OnIDTransactionChanging(value);
					this.SendPropertyChanging();
					this._IDTransaction = value;
					this.SendPropertyChanged("IDTransaction");
					this.OnIDTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origine", DbType="NChar(10)")]
		public string Origine
		{
			get
			{
				return this._Origine;
			}
			set
			{
				if ((this._Origine != value))
				{
					this.OnOrigineChanging(value);
					this.SendPropertyChanging();
					this._Origine = value;
					this.SendPropertyChanged("Origine");
					this.OnOrigineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int")]
		public System.Nullable<int> StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorePhone", DbType="NChar(20)")]
		public string StorePhone
		{
			get
			{
				return this._StorePhone;
			}
			set
			{
				if ((this._StorePhone != value))
				{
					this.OnStorePhoneChanging(value);
					this.SendPropertyChanging();
					this._StorePhone = value;
					this.SendPropertyChanged("StorePhone");
					this.OnStorePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhone", DbType="NChar(20)")]
		public string CustomerPhone
		{
			get
			{
				return this._CustomerPhone;
			}
			set
			{
				if ((this._CustomerPhone != value))
				{
					this.OnCustomerPhoneChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhone = value;
					this.SendPropertyChanged("CustomerPhone");
					this.OnCustomerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PacificCodeID", DbType="Int")]
		public System.Nullable<int> PacificCodeID
		{
			get
			{
				return this._PacificCodeID;
			}
			set
			{
				if ((this._PacificCodeID != value))
				{
					this.OnPacificCodeIDChanging(value);
					this.SendPropertyChanging();
					this._PacificCodeID = value;
					this.SendPropertyChanged("PacificCodeID");
					this.OnPacificCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PacificCode", DbType="NChar(20)")]
		public string PacificCode
		{
			get
			{
				return this._PacificCode;
			}
			set
			{
				if ((this._PacificCode != value))
				{
					this.OnPacificCodeChanging(value);
					this.SendPropertyChanging();
					this._PacificCode = value;
					this.SendPropertyChanged("PacificCode");
					this.OnPacificCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPTime", DbType="Date")]
		public System.Nullable<System.DateTime> IPTime
		{
			get
			{
				return this._IPTime;
			}
			set
			{
				if ((this._IPTime != value))
				{
					this.OnIPTimeChanging(value);
					this.SendPropertyChanging();
					this._IPTime = value;
					this.SendPropertyChanged("IPTime");
					this.OnIPTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMS", DbType="NChar(10)")]
		public string SMS
		{
			get
			{
				return this._SMS;
			}
			set
			{
				if ((this._SMS != value))
				{
					this.OnSMSChanging(value);
					this.SendPropertyChanging();
					this._SMS = value;
					this.SendPropertyChanged("SMS");
					this.OnSMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._TransactionStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionStatus_Transaction", Storage="_TransactionStatus", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public TransactionStatus TransactionStatus
		{
			get
			{
				return this._TransactionStatus.Entity;
			}
			set
			{
				TransactionStatus previousValue = this._TransactionStatus.Entity;
				if (((previousValue != value) 
							|| (this._TransactionStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionStatus.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._TransactionStatus.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TransactionStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
