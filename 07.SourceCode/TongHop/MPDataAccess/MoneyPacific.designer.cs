#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MPDataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="moneypacific_security_final")]
	public partial class MoneyPacificDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAgent(Agent instance);
    partial void UpdateAgent(Agent instance);
    partial void DeleteAgent(Agent instance);
    partial void InsertWebsiteOrder(WebsiteOrder instance);
    partial void UpdateWebsiteOrder(WebsiteOrder instance);
    partial void DeleteWebsiteOrder(WebsiteOrder instance);
    partial void InsertAgentState(AgentState instance);
    partial void UpdateAgentState(AgentState instance);
    partial void DeleteAgentState(AgentState instance);
    partial void InsertArea(Area instance);
    partial void UpdateArea(Area instance);
    partial void DeleteArea(Area instance);
    partial void InsertBuyCustomer(BuyCustomer instance);
    partial void UpdateBuyCustomer(BuyCustomer instance);
    partial void DeleteBuyCustomer(BuyCustomer instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertChatBox(ChatBox instance);
    partial void UpdateChatBox(ChatBox instance);
    partial void DeleteChatBox(ChatBox instance);
    partial void InsertCollection(Collection instance);
    partial void UpdateCollection(Collection instance);
    partial void DeleteCollection(Collection instance);
    partial void InsertCollectionState(CollectionState instance);
    partial void UpdateCollectionState(CollectionState instance);
    partial void DeleteCollectionState(CollectionState instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomerState(CustomerState instance);
    partial void UpdateCustomerState(CustomerState instance);
    partial void DeleteCustomerState(CustomerState instance);
    partial void InsertEarning(Earning instance);
    partial void UpdateEarning(Earning instance);
    partial void DeleteEarning(Earning instance);
    partial void InsertEmailCapture(EmailCapture instance);
    partial void UpdateEmailCapture(EmailCapture instance);
    partial void DeleteEmailCapture(EmailCapture instance);
    partial void InsertHTransaction(HTransaction instance);
    partial void UpdateHTransaction(HTransaction instance);
    partial void DeleteHTransaction(HTransaction instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertMPAdmin(MPAdmin instance);
    partial void UpdateMPAdmin(MPAdmin instance);
    partial void DeleteMPAdmin(MPAdmin instance);
    partial void InsertParameter(Parameter instance);
    partial void UpdateParameter(Parameter instance);
    partial void DeleteParameter(Parameter instance);
    partial void InsertPartPacificCode(PartPacificCode instance);
    partial void UpdatePartPacificCode(PartPacificCode instance);
    partial void DeletePartPacificCode(PartPacificCode instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertScript(Script instance);
    partial void UpdateScript(Script instance);
    partial void DeleteScript(Script instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertStoreManager(StoreManager instance);
    partial void UpdateStoreManager(StoreManager instance);
    partial void DeleteStoreManager(StoreManager instance);
    partial void InsertStoreManagerState(StoreManagerState instance);
    partial void UpdateStoreManagerState(StoreManagerState instance);
    partial void DeleteStoreManagerState(StoreManagerState instance);
    partial void InsertStoreUser(StoreUser instance);
    partial void UpdateStoreUser(StoreUser instance);
    partial void DeleteStoreUser(StoreUser instance);
    partial void InsertStoreUserState(StoreUserState instance);
    partial void UpdateStoreUserState(StoreUserState instance);
    partial void DeleteStoreUserState(StoreUserState instance);
    partial void InsertTimeItem(TimeItem instance);
    partial void UpdateTimeItem(TimeItem instance);
    partial void DeleteTimeItem(TimeItem instance);
    partial void InsertTimeTable(TimeTable instance);
    partial void UpdateTimeTable(TimeTable instance);
    partial void DeleteTimeTable(TimeTable instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertTransactionCate(TransactionCate instance);
    partial void UpdateTransactionCate(TransactionCate instance);
    partial void DeleteTransactionCate(TransactionCate instance);
    partial void InsertTransactionFee(TransactionFee instance);
    partial void UpdateTransactionFee(TransactionFee instance);
    partial void DeleteTransactionFee(TransactionFee instance);
    partial void InsertTransactionState(TransactionState instance);
    partial void UpdateTransactionState(TransactionState instance);
    partial void DeleteTransactionState(TransactionState instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserInRole(UserInRole instance);
    partial void UpdateUserInRole(UserInRole instance);
    partial void DeleteUserInRole(UserInRole instance);
    partial void InsertWebmaster(Webmaster instance);
    partial void UpdateWebmaster(Webmaster instance);
    partial void DeleteWebmaster(Webmaster instance);
    partial void InsertWebsite(Website instance);
    partial void UpdateWebsite(Website instance);
    partial void DeleteWebsite(Website instance);
    #endregion
		
		public MoneyPacificDataContext() : 
				base(global::MPDataAccess.Properties.Settings.Default.moneypacific_security_finalConnectionString, mappingSource)
        //base("Data Source=KS306535;Initial Catalog=moneypacific_security_final;Persist Security Info=True;User ID=sa;Password=@dmin123", mappingSource)
		{
			OnCreated();
		}
		
		public MoneyPacificDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MoneyPacificDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MoneyPacificDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MoneyPacificDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Agent> Agents
		{
			get
			{
				return this.GetTable<Agent>();
			}
		}
		
		public System.Data.Linq.Table<WebsiteOrder> WebsiteOrders
		{
			get
			{
				return this.GetTable<WebsiteOrder>();
			}
		}
		
		public System.Data.Linq.Table<AgentState> AgentStates
		{
			get
			{
				return this.GetTable<AgentState>();
			}
		}
		
		public System.Data.Linq.Table<Area> Areas
		{
			get
			{
				return this.GetTable<Area>();
			}
		}
		
		public System.Data.Linq.Table<BuyCustomer> BuyCustomers
		{
			get
			{
				return this.GetTable<BuyCustomer>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<ChatBox> ChatBoxes
		{
			get
			{
				return this.GetTable<ChatBox>();
			}
		}
		
		public System.Data.Linq.Table<Collection> Collections
		{
			get
			{
				return this.GetTable<Collection>();
			}
		}
		
		public System.Data.Linq.Table<CollectionState> CollectionStates
		{
			get
			{
				return this.GetTable<CollectionState>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerState> CustomerStates
		{
			get
			{
				return this.GetTable<CustomerState>();
			}
		}
		
		public System.Data.Linq.Table<Earning> Earnings
		{
			get
			{
				return this.GetTable<Earning>();
			}
		}
		
		public System.Data.Linq.Table<EmailCapture> EmailCaptures
		{
			get
			{
				return this.GetTable<EmailCapture>();
			}
		}
		
		public System.Data.Linq.Table<HTransaction> HTransactions
		{
			get
			{
				return this.GetTable<HTransaction>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<MPAdmin> MPAdmins
		{
			get
			{
				return this.GetTable<MPAdmin>();
			}
		}
		
		public System.Data.Linq.Table<Parameter> Parameters
		{
			get
			{
				return this.GetTable<Parameter>();
			}
		}
		
		public System.Data.Linq.Table<PartPacificCode> PartPacificCodes
		{
			get
			{
				return this.GetTable<PartPacificCode>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Script> Scripts
		{
			get
			{
				return this.GetTable<Script>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<StoreManager> StoreManagers
		{
			get
			{
				return this.GetTable<StoreManager>();
			}
		}
		
		public System.Data.Linq.Table<StoreManagerState> StoreManagerStates
		{
			get
			{
				return this.GetTable<StoreManagerState>();
			}
		}
		
		public System.Data.Linq.Table<StoreUser> StoreUsers
		{
			get
			{
				return this.GetTable<StoreUser>();
			}
		}
		
		public System.Data.Linq.Table<StoreUserState> StoreUserStates
		{
			get
			{
				return this.GetTable<StoreUserState>();
			}
		}
		
		public System.Data.Linq.Table<TimeItem> TimeItems
		{
			get
			{
				return this.GetTable<TimeItem>();
			}
		}
		
		public System.Data.Linq.Table<TimeTable> TimeTables
		{
			get
			{
				return this.GetTable<TimeTable>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<TransactionCate> TransactionCates
		{
			get
			{
				return this.GetTable<TransactionCate>();
			}
		}
		
		public System.Data.Linq.Table<TransactionFee> TransactionFees
		{
			get
			{
				return this.GetTable<TransactionFee>();
			}
		}
		
		public System.Data.Linq.Table<TransactionState> TransactionStates
		{
			get
			{
				return this.GetTable<TransactionState>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserInRole> UserInRoles
		{
			get
			{
				return this.GetTable<UserInRole>();
			}
		}
		
		public System.Data.Linq.Table<Webmaster> Webmasters
		{
			get
			{
				return this.GetTable<Webmaster>();
			}
		}
		
		public System.Data.Linq.Table<Website> Websites
		{
			get
			{
				return this.GetTable<Website>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agent")]
	public partial class Agent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Nullable<int> _StatusId;
		
		private string _Address;
		
		private string _Phone;
		
		private EntitySet<Collection> _Collections;
		
		private EntityRef<AgentState> _AgentState;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Agent()
		{
			this._Collections = new EntitySet<Collection>(new Action<Collection>(this.attach_Collections), new Action<Collection>(this.detach_Collections));
			this._AgentState = default(EntityRef<AgentState>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._AgentState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Collection", Storage="_Collections", ThisKey="UserId", OtherKey="AgentId")]
		public EntitySet<Collection> Collections
		{
			get
			{
				return this._Collections;
			}
			set
			{
				this._Collections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AgentState_Agent", Storage="_AgentState", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public AgentState AgentState
		{
			get
			{
				return this._AgentState.Entity;
			}
			set
			{
				AgentState previousValue = this._AgentState.Entity;
				if (((previousValue != value) 
							|| (this._AgentState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AgentState.Entity = null;
						previousValue.Agents.Remove(this);
					}
					this._AgentState.Entity = value;
					if ((value != null))
					{
						value.Agents.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AgentState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Agent", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Agent = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Agent = this;
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Collections(Collection entity)
		{
			this.SendPropertyChanging();
			entity.Agent = this;
		}
		
		private void detach_Collections(Collection entity)
		{
			this.SendPropertyChanging();
			entity.Agent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebsiteOrder")]
	public partial class WebsiteOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WebsiteId;
		
		private string _Name;
		
		private System.DateTime _Date;
		
		private int _Status;
		
		private int _Amount;
		
		private string _BuyingId;
		
		private int _MoneyStatus;
		
		private System.Nullable<int> _ProductType;
		
		private System.Nullable<bool> _ProofValidate;
		
		private EntityRef<BuyCustomer> _BuyCustomer;
		
		private EntityRef<Website> _Website;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWebsiteIdChanging(int value);
    partial void OnWebsiteIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnBuyingIdChanging(string value);
    partial void OnBuyingIdChanged();
    partial void OnMoneyStatusChanging(int value);
    partial void OnMoneyStatusChanged();
    partial void OnProductTypeChanging(System.Nullable<int> value);
    partial void OnProductTypeChanged();
    partial void OnProofValidateChanging(System.Nullable<bool> value);
    partial void OnProofValidateChanged();
    #endregion
		
		public WebsiteOrder()
		{
			this._BuyCustomer = default(EntityRef<BuyCustomer>);
			this._Website = default(EntityRef<Website>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteId", DbType="Int NOT NULL")]
		public int WebsiteId
		{
			get
			{
				return this._WebsiteId;
			}
			set
			{
				if ((this._WebsiteId != value))
				{
					if (this._Website.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebsiteIdChanging(value);
					this.SendPropertyChanging();
					this._WebsiteId = value;
					this.SendPropertyChanged("WebsiteId");
					this.OnWebsiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyingId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BuyingId
		{
			get
			{
				return this._BuyingId;
			}
			set
			{
				if ((this._BuyingId != value))
				{
					if (this._BuyCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuyingIdChanging(value);
					this.SendPropertyChanging();
					this._BuyingId = value;
					this.SendPropertyChanged("BuyingId");
					this.OnBuyingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyStatus", DbType="Int NOT NULL")]
		public int MoneyStatus
		{
			get
			{
				return this._MoneyStatus;
			}
			set
			{
				if ((this._MoneyStatus != value))
				{
					this.OnMoneyStatusChanging(value);
					this.SendPropertyChanging();
					this._MoneyStatus = value;
					this.SendPropertyChanged("MoneyStatus");
					this.OnMoneyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductType", DbType="Int")]
		public System.Nullable<int> ProductType
		{
			get
			{
				return this._ProductType;
			}
			set
			{
				if ((this._ProductType != value))
				{
					this.OnProductTypeChanging(value);
					this.SendPropertyChanging();
					this._ProductType = value;
					this.SendPropertyChanged("ProductType");
					this.OnProductTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProofValidate", DbType="Bit")]
		public System.Nullable<bool> ProofValidate
		{
			get
			{
				return this._ProofValidate;
			}
			set
			{
				if ((this._ProofValidate != value))
				{
					this.OnProofValidateChanging(value);
					this.SendPropertyChanging();
					this._ProofValidate = value;
					this.SendPropertyChanged("ProofValidate");
					this.OnProofValidateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuyCustomer_WebsiteOrder", Storage="_BuyCustomer", ThisKey="BuyingId", OtherKey="BuyingId", IsForeignKey=true)]
		public BuyCustomer BuyCustomer
		{
			get
			{
				return this._BuyCustomer.Entity;
			}
			set
			{
				BuyCustomer previousValue = this._BuyCustomer.Entity;
				if (((previousValue != value) 
							|| (this._BuyCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BuyCustomer.Entity = null;
						previousValue.WebsiteOrders.Remove(this);
					}
					this._BuyCustomer.Entity = value;
					if ((value != null))
					{
						value.WebsiteOrders.Add(this);
						this._BuyingId = value.BuyingId;
					}
					else
					{
						this._BuyingId = default(string);
					}
					this.SendPropertyChanged("BuyCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Website_WebsiteOrder", Storage="_Website", ThisKey="WebsiteId", OtherKey="Id", IsForeignKey=true)]
		public Website Website
		{
			get
			{
				return this._Website.Entity;
			}
			set
			{
				Website previousValue = this._Website.Entity;
				if (((previousValue != value) 
							|| (this._Website.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Website.Entity = null;
						previousValue.WebsiteOrders.Remove(this);
					}
					this._Website.Entity = value;
					if ((value != null))
					{
						value.WebsiteOrders.Add(this);
						this._WebsiteId = value.Id;
					}
					else
					{
						this._WebsiteId = default(int);
					}
					this.SendPropertyChanged("Website");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AgentState")]
	public partial class AgentState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Agent> _Agents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AgentState()
		{
			this._Agents = new EntitySet<Agent>(new Action<Agent>(this.attach_Agents), new Action<Agent>(this.detach_Agents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(10)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AgentState_Agent", Storage="_Agents", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<Agent> Agents
		{
			get
			{
				return this._Agents;
			}
			set
			{
				this._Agents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agents(Agent entity)
		{
			this.SendPropertyChanging();
			entity.AgentState = this;
		}
		
		private void detach_Agents(Agent entity)
		{
			this.SendPropertyChanging();
			entity.AgentState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Area")]
	public partial class Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<StoreManager> _StoreManagers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Area()
		{
			this._StoreManagers = new EntitySet<StoreManager>(new Action<StoreManager>(this.attach_StoreManagers), new Action<StoreManager>(this.detach_StoreManagers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_StoreManager", Storage="_StoreManagers", ThisKey="Id", OtherKey="AreaId")]
		public EntitySet<StoreManager> StoreManagers
		{
			get
			{
				return this._StoreManagers;
			}
			set
			{
				this._StoreManagers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreManagers(StoreManager entity)
		{
			this.SendPropertyChanging();
			entity.Area = this;
		}
		
		private void detach_StoreManagers(StoreManager entity)
		{
			this.SendPropertyChanging();
			entity.Area = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuyCustomer")]
	public partial class BuyCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BuyingId;
		
		private string _Email;
		
		private string _Phone;
		
		private string _DeliveryAddress;
		
		private string _Note;
		
		private string _DeliveryCompany;
		
		private string _TrackingNumber;
		
		private string _DateSend;
		
		private string _Password;
		
		private EntitySet<WebsiteOrder> _WebsiteOrders;
		
		private EntitySet<Message> _Messages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuyingIdChanging(string value);
    partial void OnBuyingIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnDeliveryAddressChanging(string value);
    partial void OnDeliveryAddressChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDeliveryCompanyChanging(string value);
    partial void OnDeliveryCompanyChanged();
    partial void OnTrackingNumberChanging(string value);
    partial void OnTrackingNumberChanged();
    partial void OnDateSendChanging(string value);
    partial void OnDateSendChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public BuyCustomer()
		{
			this._WebsiteOrders = new EntitySet<WebsiteOrder>(new Action<WebsiteOrder>(this.attach_WebsiteOrders), new Action<WebsiteOrder>(this.detach_WebsiteOrders));
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyingId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BuyingId
		{
			get
			{
				return this._BuyingId;
			}
			set
			{
				if ((this._BuyingId != value))
				{
					this.OnBuyingIdChanging(value);
					this.SendPropertyChanging();
					this._BuyingId = value;
					this.SendPropertyChanged("BuyingId");
					this.OnBuyingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryAddress", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DeliveryAddress
		{
			get
			{
				return this._DeliveryAddress;
			}
			set
			{
				if ((this._DeliveryAddress != value))
				{
					this.OnDeliveryAddressChanging(value);
					this.SendPropertyChanging();
					this._DeliveryAddress = value;
					this.SendPropertyChanged("DeliveryAddress");
					this.OnDeliveryAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCompany", DbType="NVarChar(50)")]
		public string DeliveryCompany
		{
			get
			{
				return this._DeliveryCompany;
			}
			set
			{
				if ((this._DeliveryCompany != value))
				{
					this.OnDeliveryCompanyChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCompany = value;
					this.SendPropertyChanged("DeliveryCompany");
					this.OnDeliveryCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingNumber", DbType="NVarChar(50)")]
		public string TrackingNumber
		{
			get
			{
				return this._TrackingNumber;
			}
			set
			{
				if ((this._TrackingNumber != value))
				{
					this.OnTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._TrackingNumber = value;
					this.SendPropertyChanged("TrackingNumber");
					this.OnTrackingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSend", DbType="VarChar(50)")]
		public string DateSend
		{
			get
			{
				return this._DateSend;
			}
			set
			{
				if ((this._DateSend != value))
				{
					this.OnDateSendChanging(value);
					this.SendPropertyChanging();
					this._DateSend = value;
					this.SendPropertyChanged("DateSend");
					this.OnDateSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuyCustomer_WebsiteOrder", Storage="_WebsiteOrders", ThisKey="BuyingId", OtherKey="BuyingId")]
		public EntitySet<WebsiteOrder> WebsiteOrders
		{
			get
			{
				return this._WebsiteOrders;
			}
			set
			{
				this._WebsiteOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuyCustomer_Message", Storage="_Messages", ThisKey="BuyingId", OtherKey="UserId")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WebsiteOrders(WebsiteOrder entity)
		{
			this.SendPropertyChanging();
			entity.BuyCustomer = this;
		}
		
		private void detach_WebsiteOrders(WebsiteOrder entity)
		{
			this.SendPropertyChanging();
			entity.BuyCustomer = null;
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.BuyCustomer = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.BuyCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Value;
		
		private System.Nullable<bool> _Active;
		
		private string _Description;
		
		private EntitySet<PartPacificCode> _PartPacificCodes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Category()
		{
			this._PartPacificCodes = new EntitySet<PartPacificCode>(new Action<PartPacificCode>(this.attach_PartPacificCodes), new Action<PartPacificCode>(this.detach_PartPacificCodes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_PartPacificCode", Storage="_PartPacificCodes", ThisKey="Id", OtherKey="CateId")]
		public EntitySet<PartPacificCode> PartPacificCodes
		{
			get
			{
				return this._PartPacificCodes;
			}
			set
			{
				this._PartPacificCodes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartPacificCodes(PartPacificCode entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_PartPacificCodes(PartPacificCode entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChatBox")]
	public partial class ChatBox : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AttachFile;
		
		private string _Title;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _DateSend;
		
		private int _Sender;
		
		private int _WebmasterId;
		
		private EntityRef<Webmaster> _Webmaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttachFileChanging(string value);
    partial void OnAttachFileChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDateSendChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSendChanged();
    partial void OnSenderChanging(int value);
    partial void OnSenderChanged();
    partial void OnWebmasterIdChanging(int value);
    partial void OnWebmasterIdChanged();
    #endregion
		
		public ChatBox()
		{
			this._Webmaster = default(EntityRef<Webmaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachFile", DbType="NVarChar(MAX)")]
		public string AttachFile
		{
			get
			{
				return this._AttachFile;
			}
			set
			{
				if ((this._AttachFile != value))
				{
					this.OnAttachFileChanging(value);
					this.SendPropertyChanging();
					this._AttachFile = value;
					this.SendPropertyChanged("AttachFile");
					this.OnAttachFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSend", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSend
		{
			get
			{
				return this._DateSend;
			}
			set
			{
				if ((this._DateSend != value))
				{
					this.OnDateSendChanging(value);
					this.SendPropertyChanging();
					this._DateSend = value;
					this.SendPropertyChanged("DateSend");
					this.OnDateSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="Int NOT NULL")]
		public int Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebmasterId", DbType="Int NOT NULL")]
		public int WebmasterId
		{
			get
			{
				return this._WebmasterId;
			}
			set
			{
				if ((this._WebmasterId != value))
				{
					if (this._Webmaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebmasterIdChanging(value);
					this.SendPropertyChanging();
					this._WebmasterId = value;
					this.SendPropertyChanged("WebmasterId");
					this.OnWebmasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Webmaster_ChatBox", Storage="_Webmaster", ThisKey="WebmasterId", OtherKey="Id", IsForeignKey=true)]
		public Webmaster Webmaster
		{
			get
			{
				return this._Webmaster.Entity;
			}
			set
			{
				Webmaster previousValue = this._Webmaster.Entity;
				if (((previousValue != value) 
							|| (this._Webmaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Webmaster.Entity = null;
						previousValue.ChatBoxes.Remove(this);
					}
					this._Webmaster.Entity = value;
					if ((value != null))
					{
						value.ChatBoxes.Add(this);
						this._WebmasterId = value.Id;
					}
					else
					{
						this._WebmasterId = default(int);
					}
					this.SendPropertyChanged("Webmaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Collection")]
	public partial class Collection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.Guid> _AgentId;
		
		private System.Nullable<int> _StatusId;
		
		private System.Nullable<System.Guid> _StoreManagerId;
		
		private string _CollectNumber;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private System.Nullable<System.DateTime> _CollectDate;
		
		private System.Nullable<int> _Amount;
		
		private EntityRef<Agent> _Agent;
		
		private EntityRef<CollectionState> _CollectionState;
		
		private EntityRef<StoreManager> _StoreManager;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAgentIdChanging(System.Nullable<System.Guid> value);
    partial void OnAgentIdChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnStoreManagerIdChanging(System.Nullable<System.Guid> value);
    partial void OnStoreManagerIdChanged();
    partial void OnCollectNumberChanging(string value);
    partial void OnCollectNumberChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnCollectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCollectDateChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    #endregion
		
		public Collection()
		{
			this._Agent = default(EntityRef<Agent>);
			this._CollectionState = default(EntityRef<CollectionState>);
			this._StoreManager = default(EntityRef<StoreManager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AgentId
		{
			get
			{
				return this._AgentId;
			}
			set
			{
				if ((this._AgentId != value))
				{
					if (this._Agent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgentIdChanging(value);
					this.SendPropertyChanging();
					this._AgentId = value;
					this.SendPropertyChanged("AgentId");
					this.OnAgentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._CollectionState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreManagerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StoreManagerId
		{
			get
			{
				return this._StoreManagerId;
			}
			set
			{
				if ((this._StoreManagerId != value))
				{
					if (this._StoreManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreManagerIdChanging(value);
					this.SendPropertyChanging();
					this._StoreManagerId = value;
					this.SendPropertyChanged("StoreManagerId");
					this.OnStoreManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectNumber", DbType="NVarChar(10)")]
		public string CollectNumber
		{
			get
			{
				return this._CollectNumber;
			}
			set
			{
				if ((this._CollectNumber != value))
				{
					this.OnCollectNumberChanging(value);
					this.SendPropertyChanging();
					this._CollectNumber = value;
					this.SendPropertyChanged("CollectNumber");
					this.OnCollectNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="Date")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectDate", DbType="Date")]
		public System.Nullable<System.DateTime> CollectDate
		{
			get
			{
				return this._CollectDate;
			}
			set
			{
				if ((this._CollectDate != value))
				{
					this.OnCollectDateChanging(value);
					this.SendPropertyChanging();
					this._CollectDate = value;
					this.SendPropertyChanged("CollectDate");
					this.OnCollectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agent_Collection", Storage="_Agent", ThisKey="AgentId", OtherKey="UserId", IsForeignKey=true)]
		public Agent Agent
		{
			get
			{
				return this._Agent.Entity;
			}
			set
			{
				Agent previousValue = this._Agent.Entity;
				if (((previousValue != value) 
							|| (this._Agent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agent.Entity = null;
						previousValue.Collections.Remove(this);
					}
					this._Agent.Entity = value;
					if ((value != null))
					{
						value.Collections.Add(this);
						this._AgentId = value.UserId;
					}
					else
					{
						this._AgentId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Agent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CollectionState_Collection", Storage="_CollectionState", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public CollectionState CollectionState
		{
			get
			{
				return this._CollectionState.Entity;
			}
			set
			{
				CollectionState previousValue = this._CollectionState.Entity;
				if (((previousValue != value) 
							|| (this._CollectionState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CollectionState.Entity = null;
						previousValue.Collections.Remove(this);
					}
					this._CollectionState.Entity = value;
					if ((value != null))
					{
						value.Collections.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CollectionState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreManager_Collection", Storage="_StoreManager", ThisKey="StoreManagerId", OtherKey="UserId", IsForeignKey=true)]
		public StoreManager StoreManager
		{
			get
			{
				return this._StoreManager.Entity;
			}
			set
			{
				StoreManager previousValue = this._StoreManager.Entity;
				if (((previousValue != value) 
							|| (this._StoreManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreManager.Entity = null;
						previousValue.Collections.Remove(this);
					}
					this._StoreManager.Entity = value;
					if ((value != null))
					{
						value.Collections.Add(this);
						this._StoreManagerId = value.UserId;
					}
					else
					{
						this._StoreManagerId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("StoreManager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CollectionState")]
	public partial class CollectionState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private string _Name;
		
		private EntitySet<Collection> _Collections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CollectionState()
		{
			this._Collections = new EntitySet<Collection>(new Action<Collection>(this.attach_Collections), new Action<Collection>(this.detach_Collections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CollectionState_Collection", Storage="_Collections", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<Collection> Collections
		{
			get
			{
				return this._Collections;
			}
			set
			{
				this._Collections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Collections(Collection entity)
		{
			this.SendPropertyChanging();
			entity.CollectionState = this;
		}
		
		private void detach_Collections(Collection entity)
		{
			this.SendPropertyChanging();
			entity.CollectionState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Nullable<int> _StatusId;
		
		private string _PhoneNumber;
		
		private System.Nullable<System.DateTime> _LastDate;
		
		private System.Nullable<int> _TotalAmount;
		
		private System.Nullable<int> _NumberTransaction;
		
		private System.Nullable<int> _BadTransaction;
		
		private EntitySet<PartPacificCode> _PartPacificCodes;
		
		private EntityRef<CustomerState> _CustomerState;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnLastDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDateChanged();
    partial void OnTotalAmountChanging(System.Nullable<int> value);
    partial void OnTotalAmountChanged();
    partial void OnNumberTransactionChanging(System.Nullable<int> value);
    partial void OnNumberTransactionChanged();
    partial void OnBadTransactionChanging(System.Nullable<int> value);
    partial void OnBadTransactionChanged();
    #endregion
		
		public Customer()
		{
			this._PartPacificCodes = new EntitySet<PartPacificCode>(new Action<PartPacificCode>(this.attach_PartPacificCodes), new Action<PartPacificCode>(this.detach_PartPacificCodes));
			this._CustomerState = default(EntityRef<CustomerState>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._CustomerState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDate
		{
			get
			{
				return this._LastDate;
			}
			set
			{
				if ((this._LastDate != value))
				{
					this.OnLastDateChanging(value);
					this.SendPropertyChanging();
					this._LastDate = value;
					this.SendPropertyChanged("LastDate");
					this.OnLastDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Int")]
		public System.Nullable<int> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTransaction", DbType="Int")]
		public System.Nullable<int> NumberTransaction
		{
			get
			{
				return this._NumberTransaction;
			}
			set
			{
				if ((this._NumberTransaction != value))
				{
					this.OnNumberTransactionChanging(value);
					this.SendPropertyChanging();
					this._NumberTransaction = value;
					this.SendPropertyChanged("NumberTransaction");
					this.OnNumberTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadTransaction", DbType="Int")]
		public System.Nullable<int> BadTransaction
		{
			get
			{
				return this._BadTransaction;
			}
			set
			{
				if ((this._BadTransaction != value))
				{
					this.OnBadTransactionChanging(value);
					this.SendPropertyChanging();
					this._BadTransaction = value;
					this.SendPropertyChanged("BadTransaction");
					this.OnBadTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_PartPacificCode", Storage="_PartPacificCodes", ThisKey="UserId", OtherKey="CustomerId")]
		public EntitySet<PartPacificCode> PartPacificCodes
		{
			get
			{
				return this._PartPacificCodes;
			}
			set
			{
				this._PartPacificCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerState_Customer", Storage="_CustomerState", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public CustomerState CustomerState
		{
			get
			{
				return this._CustomerState.Entity;
			}
			set
			{
				CustomerState previousValue = this._CustomerState.Entity;
				if (((previousValue != value) 
							|| (this._CustomerState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerState.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._CustomerState.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Customer", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Customer = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartPacificCodes(PartPacificCode entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_PartPacificCodes(PartPacificCode entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerState")]
	public partial class CustomerState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Description;
		
		private System.Nullable<bool> _IsLocked;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsLockedChanging(System.Nullable<bool> value);
    partial void OnIsLockedChanged();
    #endregion
		
		public CustomerState()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit")]
		public System.Nullable<bool> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerState_Customer", Storage="_Customers", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerState = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Earning")]
	public partial class Earning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WebmasterId;
		
		private int _Amount;
		
		private int _Status;
		
		private string _Currency;
		
		private System.Nullable<System.DateTime> _LastWithDraw;
		
		private System.Nullable<System.DateTime> _DateWithDraw;
		
		private EntityRef<Webmaster> _Webmaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWebmasterIdChanging(int value);
    partial void OnWebmasterIdChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnLastWithDrawChanging(System.Nullable<System.DateTime> value);
    partial void OnLastWithDrawChanged();
    partial void OnDateWithDrawChanging(System.Nullable<System.DateTime> value);
    partial void OnDateWithDrawChanged();
    #endregion
		
		public Earning()
		{
			this._Webmaster = default(EntityRef<Webmaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebmasterId", DbType="Int NOT NULL")]
		public int WebmasterId
		{
			get
			{
				return this._WebmasterId;
			}
			set
			{
				if ((this._WebmasterId != value))
				{
					if (this._Webmaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebmasterIdChanging(value);
					this.SendPropertyChanging();
					this._WebmasterId = value;
					this.SendPropertyChanged("WebmasterId");
					this.OnWebmasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="NChar(3)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastWithDraw", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastWithDraw
		{
			get
			{
				return this._LastWithDraw;
			}
			set
			{
				if ((this._LastWithDraw != value))
				{
					this.OnLastWithDrawChanging(value);
					this.SendPropertyChanging();
					this._LastWithDraw = value;
					this.SendPropertyChanged("LastWithDraw");
					this.OnLastWithDrawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateWithDraw", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateWithDraw
		{
			get
			{
				return this._DateWithDraw;
			}
			set
			{
				if ((this._DateWithDraw != value))
				{
					this.OnDateWithDrawChanging(value);
					this.SendPropertyChanging();
					this._DateWithDraw = value;
					this.SendPropertyChanged("DateWithDraw");
					this.OnDateWithDrawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Webmaster_Earning", Storage="_Webmaster", ThisKey="WebmasterId", OtherKey="Id", IsForeignKey=true)]
		public Webmaster Webmaster
		{
			get
			{
				return this._Webmaster.Entity;
			}
			set
			{
				Webmaster previousValue = this._Webmaster.Entity;
				if (((previousValue != value) 
							|| (this._Webmaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Webmaster.Entity = null;
						previousValue.Earnings.Remove(this);
					}
					this._Webmaster.Entity = value;
					if ((value != null))
					{
						value.Earnings.Add(this);
						this._WebmasterId = value.Id;
					}
					else
					{
						this._WebmasterId = default(int);
					}
					this.SendPropertyChanged("Webmaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailCapture")]
	public partial class EmailCapture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Email;
		
		private string _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public EmailCapture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HTransaction")]
	public partial class HTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public HTransaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Message")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Message1;
		
		private string _AttachFile;
		
		private string _UserId;
		
		private bool _ToCustomer;
		
		private bool _ToWebmaster;
		
		private bool _ToMPAdmin;
		
		private System.DateTime _DateSend;
		
		private string _Reason;
		
		private System.Nullable<int> _Sender;
		
		private System.Nullable<bool> _IsClose;
		
		private EntityRef<BuyCustomer> _BuyCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMessage1Changing(string value);
    partial void OnMessage1Changed();
    partial void OnAttachFileChanging(string value);
    partial void OnAttachFileChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnToCustomerChanging(bool value);
    partial void OnToCustomerChanged();
    partial void OnToWebmasterChanging(bool value);
    partial void OnToWebmasterChanged();
    partial void OnToMPAdminChanging(bool value);
    partial void OnToMPAdminChanged();
    partial void OnDateSendChanging(System.DateTime value);
    partial void OnDateSendChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnSenderChanging(System.Nullable<int> value);
    partial void OnSenderChanged();
    partial void OnIsCloseChanging(System.Nullable<bool> value);
    partial void OnIsCloseChanged();
    #endregion
		
		public Message()
		{
			this._BuyCustomer = default(EntityRef<BuyCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Message", Storage="_Message1", DbType="NVarChar(MAX)")]
		public string Message1
		{
			get
			{
				return this._Message1;
			}
			set
			{
				if ((this._Message1 != value))
				{
					this.OnMessage1Changing(value);
					this.SendPropertyChanging();
					this._Message1 = value;
					this.SendPropertyChanged("Message1");
					this.OnMessage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachFile", DbType="NVarChar(MAX)")]
		public string AttachFile
		{
			get
			{
				return this._AttachFile;
			}
			set
			{
				if ((this._AttachFile != value))
				{
					this.OnAttachFileChanging(value);
					this.SendPropertyChanging();
					this._AttachFile = value;
					this.SendPropertyChanged("AttachFile");
					this.OnAttachFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._BuyCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToCustomer", DbType="Bit NOT NULL")]
		public bool ToCustomer
		{
			get
			{
				return this._ToCustomer;
			}
			set
			{
				if ((this._ToCustomer != value))
				{
					this.OnToCustomerChanging(value);
					this.SendPropertyChanging();
					this._ToCustomer = value;
					this.SendPropertyChanged("ToCustomer");
					this.OnToCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToWebmaster", DbType="Bit NOT NULL")]
		public bool ToWebmaster
		{
			get
			{
				return this._ToWebmaster;
			}
			set
			{
				if ((this._ToWebmaster != value))
				{
					this.OnToWebmasterChanging(value);
					this.SendPropertyChanging();
					this._ToWebmaster = value;
					this.SendPropertyChanged("ToWebmaster");
					this.OnToWebmasterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToMPAdmin", DbType="Bit NOT NULL")]
		public bool ToMPAdmin
		{
			get
			{
				return this._ToMPAdmin;
			}
			set
			{
				if ((this._ToMPAdmin != value))
				{
					this.OnToMPAdminChanging(value);
					this.SendPropertyChanging();
					this._ToMPAdmin = value;
					this.SendPropertyChanged("ToMPAdmin");
					this.OnToMPAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSend", DbType="DateTime NOT NULL")]
		public System.DateTime DateSend
		{
			get
			{
				return this._DateSend;
			}
			set
			{
				if ((this._DateSend != value))
				{
					this.OnDateSendChanging(value);
					this.SendPropertyChanging();
					this._DateSend = value;
					this.SendPropertyChanged("DateSend");
					this.OnDateSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(MAX)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="Int")]
		public System.Nullable<int> Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClose", DbType="Bit")]
		public System.Nullable<bool> IsClose
		{
			get
			{
				return this._IsClose;
			}
			set
			{
				if ((this._IsClose != value))
				{
					this.OnIsCloseChanging(value);
					this.SendPropertyChanging();
					this._IsClose = value;
					this.SendPropertyChanged("IsClose");
					this.OnIsCloseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuyCustomer_Message", Storage="_BuyCustomer", ThisKey="UserId", OtherKey="BuyingId", IsForeignKey=true)]
		public BuyCustomer BuyCustomer
		{
			get
			{
				return this._BuyCustomer.Entity;
			}
			set
			{
				BuyCustomer previousValue = this._BuyCustomer.Entity;
				if (((previousValue != value) 
							|| (this._BuyCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BuyCustomer.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._BuyCustomer.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._UserId = value.BuyingId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("BuyCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MPAdmin")]
	public partial class MPAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private string _Phone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public MPAdmin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parameter")]
	public partial class Parameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Parameter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartPacificCode")]
	public partial class PartPacificCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PartCodeNumber;
		
		private string _LastTransaction;
		
		private System.Nullable<System.Guid> _CustomerId;
		
		private System.Nullable<System.Guid> _StoreUserId;
		
		private System.Nullable<int> _CateId;
		
		private string _Comment;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<StoreUser> _StoreUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPartCodeNumberChanging(string value);
    partial void OnPartCodeNumberChanged();
    partial void OnLastTransactionChanging(string value);
    partial void OnLastTransactionChanged();
    partial void OnCustomerIdChanging(System.Nullable<System.Guid> value);
    partial void OnCustomerIdChanged();
    partial void OnStoreUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnStoreUserIdChanged();
    partial void OnCateIdChanging(System.Nullable<int> value);
    partial void OnCateIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public PartPacificCode()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._Category = default(EntityRef<Category>);
			this._Customer = default(EntityRef<Customer>);
			this._StoreUser = default(EntityRef<StoreUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartCodeNumber", DbType="NChar(20)")]
		public string PartCodeNumber
		{
			get
			{
				return this._PartCodeNumber;
			}
			set
			{
				if ((this._PartCodeNumber != value))
				{
					this.OnPartCodeNumberChanging(value);
					this.SendPropertyChanging();
					this._PartCodeNumber = value;
					this.SendPropertyChanged("PartCodeNumber");
					this.OnPartCodeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTransaction", DbType="NChar(20)")]
		public string LastTransaction
		{
			get
			{
				return this._LastTransaction;
			}
			set
			{
				if ((this._LastTransaction != value))
				{
					this.OnLastTransactionChanging(value);
					this.SendPropertyChanging();
					this._LastTransaction = value;
					this.SendPropertyChanged("LastTransaction");
					this.OnLastTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StoreUserId
		{
			get
			{
				return this._StoreUserId;
			}
			set
			{
				if ((this._StoreUserId != value))
				{
					if (this._StoreUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreUserIdChanging(value);
					this.SendPropertyChanging();
					this._StoreUserId = value;
					this.SendPropertyChanged("StoreUserId");
					this.OnStoreUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CateId", DbType="Int")]
		public System.Nullable<int> CateId
		{
			get
			{
				return this._CateId;
			}
			set
			{
				if ((this._CateId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCateIdChanging(value);
					this.SendPropertyChanging();
					this._CateId = value;
					this.SendPropertyChanged("CateId");
					this.OnCateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NChar(10)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartPacificCode_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="PartPacificCodeId")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_PartPacificCode", Storage="_Category", ThisKey="CateId", OtherKey="Id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.PartPacificCodes.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.PartPacificCodes.Add(this);
						this._CateId = value.Id;
					}
					else
					{
						this._CateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_PartPacificCode", Storage="_Customer", ThisKey="CustomerId", OtherKey="UserId", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.PartPacificCodes.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.PartPacificCodes.Add(this);
						this._CustomerId = value.UserId;
					}
					else
					{
						this._CustomerId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreUser_PartPacificCode", Storage="_StoreUser", ThisKey="StoreUserId", OtherKey="UserId", IsForeignKey=true)]
		public StoreUser StoreUser
		{
			get
			{
				return this._StoreUser.Entity;
			}
			set
			{
				StoreUser previousValue = this._StoreUser.Entity;
				if (((previousValue != value) 
							|| (this._StoreUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreUser.Entity = null;
						previousValue.PartPacificCodes.Remove(this);
					}
					this._StoreUser.Entity = value;
					if ((value != null))
					{
						value.PartPacificCodes.Add(this);
						this._StoreUserId = value.UserId;
					}
					else
					{
						this._StoreUserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("StoreUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.PartPacificCode = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.PartPacificCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WebmasterId;
		
		private System.Nullable<System.DateTime> _LastPayment;
		
		private int _Amount;
		
		private System.Nullable<int> _TypePayment;
		
		private System.Nullable<System.DateTime> _DatePayment;
		
		private string _Name;
		
		private string _Address;
		
		private string _Ward;
		
		private string _City;
		
		private string _Email;
		
		private string _Phone;
		
		private string _ZipCode;
		
		private string _Country;
		
		private EntityRef<Webmaster> _Webmaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWebmasterIdChanging(int value);
    partial void OnWebmasterIdChanged();
    partial void OnLastPaymentChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPaymentChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnTypePaymentChanging(System.Nullable<int> value);
    partial void OnTypePaymentChanged();
    partial void OnDatePaymentChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePaymentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnWardChanging(string value);
    partial void OnWardChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
		
		public Payment()
		{
			this._Webmaster = default(EntityRef<Webmaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebmasterId", DbType="Int NOT NULL")]
		public int WebmasterId
		{
			get
			{
				return this._WebmasterId;
			}
			set
			{
				if ((this._WebmasterId != value))
				{
					if (this._Webmaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebmasterIdChanging(value);
					this.SendPropertyChanging();
					this._WebmasterId = value;
					this.SendPropertyChanged("WebmasterId");
					this.OnWebmasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPayment", DbType="Date")]
		public System.Nullable<System.DateTime> LastPayment
		{
			get
			{
				return this._LastPayment;
			}
			set
			{
				if ((this._LastPayment != value))
				{
					this.OnLastPaymentChanging(value);
					this.SendPropertyChanging();
					this._LastPayment = value;
					this.SendPropertyChanged("LastPayment");
					this.OnLastPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypePayment", DbType="Int")]
		public System.Nullable<int> TypePayment
		{
			get
			{
				return this._TypePayment;
			}
			set
			{
				if ((this._TypePayment != value))
				{
					this.OnTypePaymentChanging(value);
					this.SendPropertyChanging();
					this._TypePayment = value;
					this.SendPropertyChanged("TypePayment");
					this.OnTypePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePayment", DbType="Date")]
		public System.Nullable<System.DateTime> DatePayment
		{
			get
			{
				return this._DatePayment;
			}
			set
			{
				if ((this._DatePayment != value))
				{
					this.OnDatePaymentChanging(value);
					this.SendPropertyChanging();
					this._DatePayment = value;
					this.SendPropertyChanged("DatePayment");
					this.OnDatePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ward", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ward
		{
			get
			{
				return this._Ward;
			}
			set
			{
				if ((this._Ward != value))
				{
					this.OnWardChanging(value);
					this.SendPropertyChanging();
					this._Ward = value;
					this.SendPropertyChanged("Ward");
					this.OnWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(10)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Webmaster_Payment", Storage="_Webmaster", ThisKey="WebmasterId", OtherKey="Id", IsForeignKey=true)]
		public Webmaster Webmaster
		{
			get
			{
				return this._Webmaster.Entity;
			}
			set
			{
				Webmaster previousValue = this._Webmaster.Entity;
				if (((previousValue != value) 
							|| (this._Webmaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Webmaster.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Webmaster.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._WebmasterId = value.Id;
					}
					else
					{
						this._WebmasterId = default(int);
					}
					this.SendPropertyChanged("Webmaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _RoleName;
		
		private string _Description;
		
		private EntitySet<UserInRole> _UserInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Role()
		{
			this._UserInRoles = new EntitySet<UserInRole>(new Action<UserInRole>(this.attach_UserInRoles), new Action<UserInRole>(this.detach_UserInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserInRole", Storage="_UserInRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<UserInRole> UserInRoles
		{
			get
			{
				return this._UserInRoles;
			}
			set
			{
				this._UserInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserInRoles(UserInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserInRoles(UserInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Script")]
	public partial class Script : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WebsiteId;
		
		private string _Code;
		
		private string _ScriptName;
		
		private System.Nullable<System.DateTime> _DateGet;
		
		private int _Price;
		
		private string _Currency;
		
		private int _ButtonStyle;
		
		private string _URLSuccess;
		
		private string _URLFail;
		
		private string _HashValue;
		
		private System.Nullable<int> _Virtual;
		
		private EntityRef<Website> _Website;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWebsiteIdChanging(int value);
    partial void OnWebsiteIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnScriptNameChanging(string value);
    partial void OnScriptNameChanged();
    partial void OnDateGetChanging(System.Nullable<System.DateTime> value);
    partial void OnDateGetChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnButtonStyleChanging(int value);
    partial void OnButtonStyleChanged();
    partial void OnURLSuccessChanging(string value);
    partial void OnURLSuccessChanged();
    partial void OnURLFailChanging(string value);
    partial void OnURLFailChanged();
    partial void OnHashValueChanging(string value);
    partial void OnHashValueChanged();
    partial void OnVirtualChanging(System.Nullable<int> value);
    partial void OnVirtualChanged();
    #endregion
		
		public Script()
		{
			this._Website = default(EntityRef<Website>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteId", DbType="Int NOT NULL")]
		public int WebsiteId
		{
			get
			{
				return this._WebsiteId;
			}
			set
			{
				if ((this._WebsiteId != value))
				{
					if (this._Website.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebsiteIdChanging(value);
					this.SendPropertyChanging();
					this._WebsiteId = value;
					this.SendPropertyChanged("WebsiteId");
					this.OnWebsiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(MAX)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ScriptName
		{
			get
			{
				return this._ScriptName;
			}
			set
			{
				if ((this._ScriptName != value))
				{
					this.OnScriptNameChanging(value);
					this.SendPropertyChanging();
					this._ScriptName = value;
					this.SendPropertyChanged("ScriptName");
					this.OnScriptNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateGet", DbType="Date")]
		public System.Nullable<System.DateTime> DateGet
		{
			get
			{
				return this._DateGet;
			}
			set
			{
				if ((this._DateGet != value))
				{
					this.OnDateGetChanging(value);
					this.SendPropertyChanging();
					this._DateGet = value;
					this.SendPropertyChanged("DateGet");
					this.OnDateGetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonStyle", DbType="Int NOT NULL")]
		public int ButtonStyle
		{
			get
			{
				return this._ButtonStyle;
			}
			set
			{
				if ((this._ButtonStyle != value))
				{
					this.OnButtonStyleChanging(value);
					this.SendPropertyChanging();
					this._ButtonStyle = value;
					this.SendPropertyChanged("ButtonStyle");
					this.OnButtonStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLSuccess", DbType="NVarChar(MAX)")]
		public string URLSuccess
		{
			get
			{
				return this._URLSuccess;
			}
			set
			{
				if ((this._URLSuccess != value))
				{
					this.OnURLSuccessChanging(value);
					this.SendPropertyChanging();
					this._URLSuccess = value;
					this.SendPropertyChanged("URLSuccess");
					this.OnURLSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLFail", DbType="NVarChar(MAX)")]
		public string URLFail
		{
			get
			{
				return this._URLFail;
			}
			set
			{
				if ((this._URLFail != value))
				{
					this.OnURLFailChanging(value);
					this.SendPropertyChanging();
					this._URLFail = value;
					this.SendPropertyChanged("URLFail");
					this.OnURLFailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HashValue
		{
			get
			{
				return this._HashValue;
			}
			set
			{
				if ((this._HashValue != value))
				{
					this.OnHashValueChanging(value);
					this.SendPropertyChanging();
					this._HashValue = value;
					this.SendPropertyChanged("HashValue");
					this.OnHashValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Virtual", DbType="Int")]
		public System.Nullable<int> Virtual
		{
			get
			{
				return this._Virtual;
			}
			set
			{
				if ((this._Virtual != value))
				{
					this.OnVirtualChanging(value);
					this.SendPropertyChanging();
					this._Virtual = value;
					this.SendPropertyChanged("Virtual");
					this.OnVirtualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Website_Script", Storage="_Website", ThisKey="WebsiteId", OtherKey="Id", IsForeignKey=true)]
		public Website Website
		{
			get
			{
				return this._Website.Entity;
			}
			set
			{
				Website previousValue = this._Website.Entity;
				if (((previousValue != value) 
							|| (this._Website.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Website.Entity = null;
						previousValue.Scripts.Remove(this);
					}
					this._Website.Entity = value;
					if ((value != null))
					{
						value.Scripts.Add(this);
						this._WebsiteId = value.Id;
					}
					else
					{
						this._WebsiteId = default(int);
					}
					this.SendPropertyChanged("Website");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setting")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WebmasterId;
		
		private string _Language;
		
		private EntityRef<Webmaster> _Webmaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWebmasterIdChanging(int value);
    partial void OnWebmasterIdChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    #endregion
		
		public Setting()
		{
			this._Webmaster = default(EntityRef<Webmaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebmasterId", DbType="Int NOT NULL")]
		public int WebmasterId
		{
			get
			{
				return this._WebmasterId;
			}
			set
			{
				if ((this._WebmasterId != value))
				{
					if (this._Webmaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebmasterIdChanging(value);
					this.SendPropertyChanging();
					this._WebmasterId = value;
					this.SendPropertyChanged("WebmasterId");
					this.OnWebmasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Webmaster_Setting", Storage="_Webmaster", ThisKey="WebmasterId", OtherKey="Id", IsForeignKey=true)]
		public Webmaster Webmaster
		{
			get
			{
				return this._Webmaster.Entity;
			}
			set
			{
				Webmaster previousValue = this._Webmaster.Entity;
				if (((previousValue != value) 
							|| (this._Webmaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Webmaster.Entity = null;
						previousValue.Settings.Remove(this);
					}
					this._Webmaster.Entity = value;
					if ((value != null))
					{
						value.Settings.Add(this);
						this._WebmasterId = value.Id;
					}
					else
					{
						this._WebmasterId = default(int);
					}
					this.SendPropertyChanged("Webmaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreManager")]
	public partial class StoreManager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _IdShop;
		
		private string _ManagerPhone;
		
		private string _NameOfStore;
		
		private System.Nullable<int> _StatusId;
		
		private System.Nullable<int> _AreaId;
		
		private string _Address;
		
		private string _Address2;
		
		private string _Phone;
		
		private string _Phone2;
		
		private string _EmailBill;
		
		private string _Website;
		
		private string _Zip;
		
		private string _Town;
		
		private string _Country;
		
		private string _LegalStructure;
		
		private string _NameOfCompany;
		
		private string _VATNumber;
		
		private string _Product;
		
		private string _ShopSize;
		
		private System.Nullable<int> _NumberOfShop;
		
		private System.Nullable<int> _StoreInternetAccessId;
		
		private System.Nullable<System.DateTime> _LastCollectDate;
		
		private System.Nullable<bool> _IsLocked;
		
		private EntitySet<Collection> _Collections;
		
		private EntitySet<StoreUser> _StoreUsers;
		
		private EntitySet<TimeTable> _TimeTables;
		
		private EntityRef<Area> _Area;
		
		private EntityRef<StoreManagerState> _StoreManagerState;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnIdShopChanging(string value);
    partial void OnIdShopChanged();
    partial void OnManagerPhoneChanging(string value);
    partial void OnManagerPhoneChanged();
    partial void OnNameOfStoreChanging(string value);
    partial void OnNameOfStoreChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnAreaIdChanging(System.Nullable<int> value);
    partial void OnAreaIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnEmailBillChanging(string value);
    partial void OnEmailBillChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLegalStructureChanging(string value);
    partial void OnLegalStructureChanged();
    partial void OnNameOfCompanyChanging(string value);
    partial void OnNameOfCompanyChanged();
    partial void OnVATNumberChanging(string value);
    partial void OnVATNumberChanged();
    partial void OnProductChanging(string value);
    partial void OnProductChanged();
    partial void OnShopSizeChanging(string value);
    partial void OnShopSizeChanged();
    partial void OnNumberOfShopChanging(System.Nullable<int> value);
    partial void OnNumberOfShopChanged();
    partial void OnStoreInternetAccessIdChanging(System.Nullable<int> value);
    partial void OnStoreInternetAccessIdChanged();
    partial void OnLastCollectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCollectDateChanged();
    partial void OnIsLockedChanging(System.Nullable<bool> value);
    partial void OnIsLockedChanged();
    #endregion
		
		public StoreManager()
		{
			this._Collections = new EntitySet<Collection>(new Action<Collection>(this.attach_Collections), new Action<Collection>(this.detach_Collections));
			this._StoreUsers = new EntitySet<StoreUser>(new Action<StoreUser>(this.attach_StoreUsers), new Action<StoreUser>(this.detach_StoreUsers));
			this._TimeTables = new EntitySet<TimeTable>(new Action<TimeTable>(this.attach_TimeTables), new Action<TimeTable>(this.detach_TimeTables));
			this._Area = default(EntityRef<Area>);
			this._StoreManagerState = default(EntityRef<StoreManagerState>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdShop", DbType="NVarChar(10)")]
		public string IdShop
		{
			get
			{
				return this._IdShop;
			}
			set
			{
				if ((this._IdShop != value))
				{
					this.OnIdShopChanging(value);
					this.SendPropertyChanging();
					this._IdShop = value;
					this.SendPropertyChanged("IdShop");
					this.OnIdShopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerPhone", DbType="NVarChar(20)")]
		public string ManagerPhone
		{
			get
			{
				return this._ManagerPhone;
			}
			set
			{
				if ((this._ManagerPhone != value))
				{
					this.OnManagerPhoneChanging(value);
					this.SendPropertyChanging();
					this._ManagerPhone = value;
					this.SendPropertyChanged("ManagerPhone");
					this.OnManagerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameOfStore", DbType="NVarChar(50)")]
		public string NameOfStore
		{
			get
			{
				return this._NameOfStore;
			}
			set
			{
				if ((this._NameOfStore != value))
				{
					this.OnNameOfStoreChanging(value);
					this.SendPropertyChanging();
					this._NameOfStore = value;
					this.SendPropertyChanged("NameOfStore");
					this.OnNameOfStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._StoreManagerState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="Int")]
		public System.Nullable<int> AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					if (this._Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(255)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(20)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailBill", DbType="NVarChar(50)")]
		public string EmailBill
		{
			get
			{
				return this._EmailBill;
			}
			set
			{
				if ((this._EmailBill != value))
				{
					this.OnEmailBillChanging(value);
					this.SendPropertyChanging();
					this._EmailBill = value;
					this.SendPropertyChanged("EmailBill");
					this.OnEmailBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(50)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(20)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(50)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(20)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegalStructure", DbType="NVarChar(50)")]
		public string LegalStructure
		{
			get
			{
				return this._LegalStructure;
			}
			set
			{
				if ((this._LegalStructure != value))
				{
					this.OnLegalStructureChanging(value);
					this.SendPropertyChanging();
					this._LegalStructure = value;
					this.SendPropertyChanged("LegalStructure");
					this.OnLegalStructureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameOfCompany", DbType="NVarChar(50)")]
		public string NameOfCompany
		{
			get
			{
				return this._NameOfCompany;
			}
			set
			{
				if ((this._NameOfCompany != value))
				{
					this.OnNameOfCompanyChanging(value);
					this.SendPropertyChanging();
					this._NameOfCompany = value;
					this.SendPropertyChanged("NameOfCompany");
					this.OnNameOfCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATNumber", DbType="NVarChar(20)")]
		public string VATNumber
		{
			get
			{
				return this._VATNumber;
			}
			set
			{
				if ((this._VATNumber != value))
				{
					this.OnVATNumberChanging(value);
					this.SendPropertyChanging();
					this._VATNumber = value;
					this.SendPropertyChanged("VATNumber");
					this.OnVATNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product", DbType="NVarChar(255)")]
		public string Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				if ((this._Product != value))
				{
					this.OnProductChanging(value);
					this.SendPropertyChanging();
					this._Product = value;
					this.SendPropertyChanged("Product");
					this.OnProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopSize", DbType="NVarChar(255)")]
		public string ShopSize
		{
			get
			{
				return this._ShopSize;
			}
			set
			{
				if ((this._ShopSize != value))
				{
					this.OnShopSizeChanging(value);
					this.SendPropertyChanging();
					this._ShopSize = value;
					this.SendPropertyChanged("ShopSize");
					this.OnShopSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfShop", DbType="Int")]
		public System.Nullable<int> NumberOfShop
		{
			get
			{
				return this._NumberOfShop;
			}
			set
			{
				if ((this._NumberOfShop != value))
				{
					this.OnNumberOfShopChanging(value);
					this.SendPropertyChanging();
					this._NumberOfShop = value;
					this.SendPropertyChanged("NumberOfShop");
					this.OnNumberOfShopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreInternetAccessId", DbType="Int")]
		public System.Nullable<int> StoreInternetAccessId
		{
			get
			{
				return this._StoreInternetAccessId;
			}
			set
			{
				if ((this._StoreInternetAccessId != value))
				{
					this.OnStoreInternetAccessIdChanging(value);
					this.SendPropertyChanging();
					this._StoreInternetAccessId = value;
					this.SendPropertyChanged("StoreInternetAccessId");
					this.OnStoreInternetAccessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCollectDate", DbType="Date")]
		public System.Nullable<System.DateTime> LastCollectDate
		{
			get
			{
				return this._LastCollectDate;
			}
			set
			{
				if ((this._LastCollectDate != value))
				{
					this.OnLastCollectDateChanging(value);
					this.SendPropertyChanging();
					this._LastCollectDate = value;
					this.SendPropertyChanged("LastCollectDate");
					this.OnLastCollectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit")]
		public System.Nullable<bool> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreManager_Collection", Storage="_Collections", ThisKey="UserId", OtherKey="StoreManagerId")]
		public EntitySet<Collection> Collections
		{
			get
			{
				return this._Collections;
			}
			set
			{
				this._Collections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreManager_StoreUser", Storage="_StoreUsers", ThisKey="UserId", OtherKey="ManagerId")]
		public EntitySet<StoreUser> StoreUsers
		{
			get
			{
				return this._StoreUsers;
			}
			set
			{
				this._StoreUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreManager_TimeTable", Storage="_TimeTables", ThisKey="UserId", OtherKey="ManagerId")]
		public EntitySet<TimeTable> TimeTables
		{
			get
			{
				return this._TimeTables;
			}
			set
			{
				this._TimeTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_StoreManager", Storage="_Area", ThisKey="AreaId", OtherKey="Id", IsForeignKey=true)]
		public Area Area
		{
			get
			{
				return this._Area.Entity;
			}
			set
			{
				Area previousValue = this._Area.Entity;
				if (((previousValue != value) 
							|| (this._Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area.Entity = null;
						previousValue.StoreManagers.Remove(this);
					}
					this._Area.Entity = value;
					if ((value != null))
					{
						value.StoreManagers.Add(this);
						this._AreaId = value.Id;
					}
					else
					{
						this._AreaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Area");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreManagerState_StoreManager", Storage="_StoreManagerState", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public StoreManagerState StoreManagerState
		{
			get
			{
				return this._StoreManagerState.Entity;
			}
			set
			{
				StoreManagerState previousValue = this._StoreManagerState.Entity;
				if (((previousValue != value) 
							|| (this._StoreManagerState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreManagerState.Entity = null;
						previousValue.StoreManagers.Remove(this);
					}
					this._StoreManagerState.Entity = value;
					if ((value != null))
					{
						value.StoreManagers.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreManagerState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StoreManager", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StoreManager = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StoreManager = this;
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Collections(Collection entity)
		{
			this.SendPropertyChanging();
			entity.StoreManager = this;
		}
		
		private void detach_Collections(Collection entity)
		{
			this.SendPropertyChanging();
			entity.StoreManager = null;
		}
		
		private void attach_StoreUsers(StoreUser entity)
		{
			this.SendPropertyChanging();
			entity.StoreManager = this;
		}
		
		private void detach_StoreUsers(StoreUser entity)
		{
			this.SendPropertyChanging();
			entity.StoreManager = null;
		}
		
		private void attach_TimeTables(TimeTable entity)
		{
			this.SendPropertyChanging();
			entity.StoreManager = this;
		}
		
		private void detach_TimeTables(TimeTable entity)
		{
			this.SendPropertyChanging();
			entity.StoreManager = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreManagerState")]
	public partial class StoreManagerState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private string _Description;
		
		private EntitySet<StoreManager> _StoreManagers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public StoreManagerState()
		{
			this._StoreManagers = new EntitySet<StoreManager>(new Action<StoreManager>(this.attach_StoreManagers), new Action<StoreManager>(this.detach_StoreManagers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreManagerState_StoreManager", Storage="_StoreManagers", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<StoreManager> StoreManagers
		{
			get
			{
				return this._StoreManagers;
			}
			set
			{
				this._StoreManagers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreManagers(StoreManager entity)
		{
			this.SendPropertyChanging();
			entity.StoreManagerState = this;
		}
		
		private void detach_StoreManagers(StoreManager entity)
		{
			this.SendPropertyChanging();
			entity.StoreManagerState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreUser")]
	public partial class StoreUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Nullable<System.Guid> _ManagerId;
		
		private string _Phone;
		
		private string _PINStore;
		
		private System.Nullable<int> _StatusId;
		
		private System.Nullable<System.DateTime> _LastDate;
		
		private System.Nullable<int> _LastTransaction;
		
		private System.Nullable<int> _NumberSales;
		
		private System.Nullable<int> _TotalSales;
		
		private string _Comment;
		
		private System.Nullable<bool> _Enable;
		
		private EntitySet<PartPacificCode> _PartPacificCodes;
		
		private EntityRef<StoreManager> _StoreManager;
		
		private EntityRef<StoreUserState> _StoreUserState;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnManagerIdChanging(System.Nullable<System.Guid> value);
    partial void OnManagerIdChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPINStoreChanging(string value);
    partial void OnPINStoreChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnLastDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDateChanged();
    partial void OnLastTransactionChanging(System.Nullable<int> value);
    partial void OnLastTransactionChanged();
    partial void OnNumberSalesChanging(System.Nullable<int> value);
    partial void OnNumberSalesChanged();
    partial void OnTotalSalesChanging(System.Nullable<int> value);
    partial void OnTotalSalesChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnEnableChanging(System.Nullable<bool> value);
    partial void OnEnableChanged();
    #endregion
		
		public StoreUser()
		{
			this._PartPacificCodes = new EntitySet<PartPacificCode>(new Action<PartPacificCode>(this.attach_PartPacificCodes), new Action<PartPacificCode>(this.detach_PartPacificCodes));
			this._StoreManager = default(EntityRef<StoreManager>);
			this._StoreUserState = default(EntityRef<StoreUserState>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					if (this._StoreManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ManagerId = value;
					this.SendPropertyChanged("ManagerId");
					this.OnManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PINStore", DbType="NVarChar(50)")]
		public string PINStore
		{
			get
			{
				return this._PINStore;
			}
			set
			{
				if ((this._PINStore != value))
				{
					this.OnPINStoreChanging(value);
					this.SendPropertyChanging();
					this._PINStore = value;
					this.SendPropertyChanged("PINStore");
					this.OnPINStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._StoreUserState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDate
		{
			get
			{
				return this._LastDate;
			}
			set
			{
				if ((this._LastDate != value))
				{
					this.OnLastDateChanging(value);
					this.SendPropertyChanging();
					this._LastDate = value;
					this.SendPropertyChanged("LastDate");
					this.OnLastDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTransaction", DbType="Int")]
		public System.Nullable<int> LastTransaction
		{
			get
			{
				return this._LastTransaction;
			}
			set
			{
				if ((this._LastTransaction != value))
				{
					this.OnLastTransactionChanging(value);
					this.SendPropertyChanging();
					this._LastTransaction = value;
					this.SendPropertyChanged("LastTransaction");
					this.OnLastTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberSales", DbType="Int")]
		public System.Nullable<int> NumberSales
		{
			get
			{
				return this._NumberSales;
			}
			set
			{
				if ((this._NumberSales != value))
				{
					this.OnNumberSalesChanging(value);
					this.SendPropertyChanging();
					this._NumberSales = value;
					this.SendPropertyChanged("NumberSales");
					this.OnNumberSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSales", DbType="Int")]
		public System.Nullable<int> TotalSales
		{
			get
			{
				return this._TotalSales;
			}
			set
			{
				if ((this._TotalSales != value))
				{
					this.OnTotalSalesChanging(value);
					this.SendPropertyChanging();
					this._TotalSales = value;
					this.SendPropertyChanged("TotalSales");
					this.OnTotalSalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit")]
		public System.Nullable<bool> Enable
		{
			get
			{
				return this._Enable;
			}
			set
			{
				if ((this._Enable != value))
				{
					this.OnEnableChanging(value);
					this.SendPropertyChanging();
					this._Enable = value;
					this.SendPropertyChanged("Enable");
					this.OnEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreUser_PartPacificCode", Storage="_PartPacificCodes", ThisKey="UserId", OtherKey="StoreUserId")]
		public EntitySet<PartPacificCode> PartPacificCodes
		{
			get
			{
				return this._PartPacificCodes;
			}
			set
			{
				this._PartPacificCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreManager_StoreUser", Storage="_StoreManager", ThisKey="ManagerId", OtherKey="UserId", IsForeignKey=true)]
		public StoreManager StoreManager
		{
			get
			{
				return this._StoreManager.Entity;
			}
			set
			{
				StoreManager previousValue = this._StoreManager.Entity;
				if (((previousValue != value) 
							|| (this._StoreManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreManager.Entity = null;
						previousValue.StoreUsers.Remove(this);
					}
					this._StoreManager.Entity = value;
					if ((value != null))
					{
						value.StoreUsers.Add(this);
						this._ManagerId = value.UserId;
					}
					else
					{
						this._ManagerId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("StoreManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreUserState_StoreUser", Storage="_StoreUserState", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public StoreUserState StoreUserState
		{
			get
			{
				return this._StoreUserState.Entity;
			}
			set
			{
				StoreUserState previousValue = this._StoreUserState.Entity;
				if (((previousValue != value) 
							|| (this._StoreUserState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreUserState.Entity = null;
						previousValue.StoreUsers.Remove(this);
					}
					this._StoreUserState.Entity = value;
					if ((value != null))
					{
						value.StoreUsers.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreUserState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StoreUser", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StoreUser = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StoreUser = this;
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartPacificCodes(PartPacificCode entity)
		{
			this.SendPropertyChanging();
			entity.StoreUser = this;
		}
		
		private void detach_PartPacificCodes(PartPacificCode entity)
		{
			this.SendPropertyChanging();
			entity.StoreUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreUserState")]
	public partial class StoreUserState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Description;
		
		private EntitySet<StoreUser> _StoreUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public StoreUserState()
		{
			this._StoreUsers = new EntitySet<StoreUser>(new Action<StoreUser>(this.attach_StoreUsers), new Action<StoreUser>(this.detach_StoreUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreUserState_StoreUser", Storage="_StoreUsers", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<StoreUser> StoreUsers
		{
			get
			{
				return this._StoreUsers;
			}
			set
			{
				this._StoreUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreUsers(StoreUser entity)
		{
			this.SendPropertyChanging();
			entity.StoreUserState = this;
		}
		
		private void detach_StoreUsers(StoreUser entity)
		{
			this.SendPropertyChanging();
			entity.StoreUserState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeItem")]
	public partial class TimeItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Day;
		
		private System.Nullable<int> _Hour;
		
		private EntitySet<TimeTable> _TimeTables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    partial void OnHourChanging(System.Nullable<int> value);
    partial void OnHourChanged();
    #endregion
		
		public TimeItem()
		{
			this._TimeTables = new EntitySet<TimeTable>(new Action<TimeTable>(this.attach_TimeTables), new Action<TimeTable>(this.detach_TimeTables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="NVarChar(50)")]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hour", DbType="Int")]
		public System.Nullable<int> Hour
		{
			get
			{
				return this._Hour;
			}
			set
			{
				if ((this._Hour != value))
				{
					this.OnHourChanging(value);
					this.SendPropertyChanging();
					this._Hour = value;
					this.SendPropertyChanged("Hour");
					this.OnHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeItem_TimeTable", Storage="_TimeTables", ThisKey="Id", OtherKey="TimeItemId")]
		public EntitySet<TimeTable> TimeTables
		{
			get
			{
				return this._TimeTables;
			}
			set
			{
				this._TimeTables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeTables(TimeTable entity)
		{
			this.SendPropertyChanging();
			entity.TimeItem = this;
		}
		
		private void detach_TimeTables(TimeTable entity)
		{
			this.SendPropertyChanging();
			entity.TimeItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeTable")]
	public partial class TimeTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ManagerId;
		
		private int _TimeItemId;
		
		private string _Description;
		
		private System.Nullable<bool> _Enabled;
		
		private EntityRef<StoreManager> _StoreManager;
		
		private EntityRef<TimeItem> _TimeItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManagerIdChanging(System.Guid value);
    partial void OnManagerIdChanged();
    partial void OnTimeItemIdChanging(int value);
    partial void OnTimeItemIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    #endregion
		
		public TimeTable()
		{
			this._StoreManager = default(EntityRef<StoreManager>);
			this._TimeItem = default(EntityRef<TimeItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					if (this._StoreManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ManagerId = value;
					this.SendPropertyChanged("ManagerId");
					this.OnManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeItemId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TimeItemId
		{
			get
			{
				return this._TimeItemId;
			}
			set
			{
				if ((this._TimeItemId != value))
				{
					if (this._TimeItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTimeItemIdChanging(value);
					this.SendPropertyChanging();
					this._TimeItemId = value;
					this.SendPropertyChanged("TimeItemId");
					this.OnTimeItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreManager_TimeTable", Storage="_StoreManager", ThisKey="ManagerId", OtherKey="UserId", IsForeignKey=true)]
		public StoreManager StoreManager
		{
			get
			{
				return this._StoreManager.Entity;
			}
			set
			{
				StoreManager previousValue = this._StoreManager.Entity;
				if (((previousValue != value) 
							|| (this._StoreManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreManager.Entity = null;
						previousValue.TimeTables.Remove(this);
					}
					this._StoreManager.Entity = value;
					if ((value != null))
					{
						value.TimeTables.Add(this);
						this._ManagerId = value.UserId;
					}
					else
					{
						this._ManagerId = default(System.Guid);
					}
					this.SendPropertyChanged("StoreManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeItem_TimeTable", Storage="_TimeItem", ThisKey="TimeItemId", OtherKey="Id", IsForeignKey=true)]
		public TimeItem TimeItem
		{
			get
			{
				return this._TimeItem.Entity;
			}
			set
			{
				TimeItem previousValue = this._TimeItem.Entity;
				if (((previousValue != value) 
							|| (this._TimeItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TimeItem.Entity = null;
						previousValue.TimeTables.Remove(this);
					}
					this._TimeItem.Entity = value;
					if ((value != null))
					{
						value.TimeTables.Add(this);
						this._TimeItemId = value.Id;
					}
					else
					{
						this._TimeItemId = default(int);
					}
					this.SendPropertyChanged("TimeItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Transaction]")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _RelateId;
		
		private System.Nullable<int> _CateId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _Origine;
		
		private System.Nullable<int> _Amount;
		
		private System.Nullable<int> _StoreId;
		
		private System.Nullable<int> _CustomerId;
		
		private System.Nullable<int> _PartPacificCodeId;
		
		private System.Nullable<System.DateTime> _IPTime;
		
		private string _SMS;
		
		private System.Nullable<int> _StatusId;
		
		private string _Comment;
		
		private EntityRef<PartPacificCode> _PartPacificCode;
		
		private EntityRef<TransactionCate> _TransactionCate;
		
		private EntityRef<TransactionState> _TransactionState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRelateIdChanging(string value);
    partial void OnRelateIdChanged();
    partial void OnCateIdChanging(System.Nullable<int> value);
    partial void OnCateIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnOrigineChanging(string value);
    partial void OnOrigineChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnStoreIdChanging(System.Nullable<int> value);
    partial void OnStoreIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnPartPacificCodeIdChanging(System.Nullable<int> value);
    partial void OnPartPacificCodeIdChanged();
    partial void OnIPTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnIPTimeChanged();
    partial void OnSMSChanging(string value);
    partial void OnSMSChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Transaction()
		{
			this._PartPacificCode = default(EntityRef<PartPacificCode>);
			this._TransactionCate = default(EntityRef<TransactionCate>);
			this._TransactionState = default(EntityRef<TransactionState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelateId", DbType="NChar(10)")]
		public string RelateId
		{
			get
			{
				return this._RelateId;
			}
			set
			{
				if ((this._RelateId != value))
				{
					this.OnRelateIdChanging(value);
					this.SendPropertyChanging();
					this._RelateId = value;
					this.SendPropertyChanged("RelateId");
					this.OnRelateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CateId", DbType="Int")]
		public System.Nullable<int> CateId
		{
			get
			{
				return this._CateId;
			}
			set
			{
				if ((this._CateId != value))
				{
					if (this._TransactionCate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCateIdChanging(value);
					this.SendPropertyChanging();
					this._CateId = value;
					this.SendPropertyChanged("CateId");
					this.OnCateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origine", DbType="NVarChar(10)")]
		public string Origine
		{
			get
			{
				return this._Origine;
			}
			set
			{
				if ((this._Origine != value))
				{
					this.OnOrigineChanging(value);
					this.SendPropertyChanging();
					this._Origine = value;
					this.SendPropertyChanged("Origine");
					this.OnOrigineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreId", DbType="Int")]
		public System.Nullable<int> StoreId
		{
			get
			{
				return this._StoreId;
			}
			set
			{
				if ((this._StoreId != value))
				{
					this.OnStoreIdChanging(value);
					this.SendPropertyChanging();
					this._StoreId = value;
					this.SendPropertyChanged("StoreId");
					this.OnStoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartPacificCodeId", DbType="Int")]
		public System.Nullable<int> PartPacificCodeId
		{
			get
			{
				return this._PartPacificCodeId;
			}
			set
			{
				if ((this._PartPacificCodeId != value))
				{
					if (this._PartPacificCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartPacificCodeIdChanging(value);
					this.SendPropertyChanging();
					this._PartPacificCodeId = value;
					this.SendPropertyChanged("PartPacificCodeId");
					this.OnPartPacificCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> IPTime
		{
			get
			{
				return this._IPTime;
			}
			set
			{
				if ((this._IPTime != value))
				{
					this.OnIPTimeChanging(value);
					this.SendPropertyChanging();
					this._IPTime = value;
					this.SendPropertyChanged("IPTime");
					this.OnIPTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMS", DbType="NVarChar(10)")]
		public string SMS
		{
			get
			{
				return this._SMS;
			}
			set
			{
				if ((this._SMS != value))
				{
					this.OnSMSChanging(value);
					this.SendPropertyChanging();
					this._SMS = value;
					this.SendPropertyChanged("SMS");
					this.OnSMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._TransactionState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartPacificCode_Transaction", Storage="_PartPacificCode", ThisKey="PartPacificCodeId", OtherKey="Id", IsForeignKey=true)]
		public PartPacificCode PartPacificCode
		{
			get
			{
				return this._PartPacificCode.Entity;
			}
			set
			{
				PartPacificCode previousValue = this._PartPacificCode.Entity;
				if (((previousValue != value) 
							|| (this._PartPacificCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PartPacificCode.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._PartPacificCode.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._PartPacificCodeId = value.Id;
					}
					else
					{
						this._PartPacificCodeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PartPacificCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionCate_Transaction", Storage="_TransactionCate", ThisKey="CateId", OtherKey="Id", IsForeignKey=true)]
		public TransactionCate TransactionCate
		{
			get
			{
				return this._TransactionCate.Entity;
			}
			set
			{
				TransactionCate previousValue = this._TransactionCate.Entity;
				if (((previousValue != value) 
							|| (this._TransactionCate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionCate.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._TransactionCate.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._CateId = value.Id;
					}
					else
					{
						this._CateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TransactionCate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionState_Transaction", Storage="_TransactionState", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public TransactionState TransactionState
		{
			get
			{
				return this._TransactionState.Entity;
			}
			set
			{
				TransactionState previousValue = this._TransactionState.Entity;
				if (((previousValue != value) 
							|| (this._TransactionState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionState.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._TransactionState.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TransactionState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionCate")]
	public partial class TransactionCate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Description;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntitySet<TransactionFee> _TransactionFees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TransactionCate()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._TransactionFees = new EntitySet<TransactionFee>(new Action<TransactionFee>(this.attach_TransactionFees), new Action<TransactionFee>(this.detach_TransactionFees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionCate_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="CateId")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionCate_TransactionFee", Storage="_TransactionFees", ThisKey="Id", OtherKey="CateId")]
		public EntitySet<TransactionFee> TransactionFees
		{
			get
			{
				return this._TransactionFees;
			}
			set
			{
				this._TransactionFees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionCate = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionCate = null;
		}
		
		private void attach_TransactionFees(TransactionFee entity)
		{
			this.SendPropertyChanging();
			entity.TransactionCate = this;
		}
		
		private void detach_TransactionFees(TransactionFee entity)
		{
			this.SendPropertyChanging();
			entity.TransactionCate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionFee")]
	public partial class TransactionFee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _CateId;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private System.Nullable<int> _Fee;
		
		private EntityRef<TransactionCate> _TransactionCate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCateIdChanging(System.Nullable<int> value);
    partial void OnCateIdChanged();
    partial void OnDateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnFeeChanging(System.Nullable<int> value);
    partial void OnFeeChanged();
    #endregion
		
		public TransactionFee()
		{
			this._TransactionCate = default(EntityRef<TransactionCate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CateId", DbType="Int")]
		public System.Nullable<int> CateId
		{
			get
			{
				return this._CateId;
			}
			set
			{
				if ((this._CateId != value))
				{
					if (this._TransactionCate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCateIdChanging(value);
					this.SendPropertyChanging();
					this._CateId = value;
					this.SendPropertyChanged("CateId");
					this.OnCateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="Date")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="Date")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fee", DbType="Int")]
		public System.Nullable<int> Fee
		{
			get
			{
				return this._Fee;
			}
			set
			{
				if ((this._Fee != value))
				{
					this.OnFeeChanging(value);
					this.SendPropertyChanging();
					this._Fee = value;
					this.SendPropertyChanged("Fee");
					this.OnFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionCate_TransactionFee", Storage="_TransactionCate", ThisKey="CateId", OtherKey="Id", IsForeignKey=true)]
		public TransactionCate TransactionCate
		{
			get
			{
				return this._TransactionCate.Entity;
			}
			set
			{
				TransactionCate previousValue = this._TransactionCate.Entity;
				if (((previousValue != value) 
							|| (this._TransactionCate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionCate.Entity = null;
						previousValue.TransactionFees.Remove(this);
					}
					this._TransactionCate.Entity = value;
					if ((value != null))
					{
						value.TransactionFees.Add(this);
						this._CateId = value.Id;
					}
					else
					{
						this._CateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TransactionCate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionState")]
	public partial class TransactionState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Description;
		
		private EntitySet<Transaction> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TransactionState()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionState_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionState = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _Email;
		
		private System.Nullable<bool> _Block;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _LastVisitDate;
		
		private EntityRef<Agent> _Agent;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<StoreManager> _StoreManager;
		
		private EntityRef<StoreUser> _StoreUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBlockChanging(System.Nullable<bool> value);
    partial void OnBlockChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastVisitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastVisitDateChanged();
    #endregion
		
		public User()
		{
			this._Agent = default(EntityRef<Agent>);
			this._Customer = default(EntityRef<Customer>);
			this._StoreManager = default(EntityRef<StoreManager>);
			this._StoreUser = default(EntityRef<StoreUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(50)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Block", DbType="Bit")]
		public System.Nullable<bool> Block
		{
			get
			{
				return this._Block;
			}
			set
			{
				if ((this._Block != value))
				{
					this.OnBlockChanging(value);
					this.SendPropertyChanging();
					this._Block = value;
					this.SendPropertyChanged("Block");
					this.OnBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVisitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastVisitDate
		{
			get
			{
				return this._LastVisitDate;
			}
			set
			{
				if ((this._LastVisitDate != value))
				{
					this.OnLastVisitDateChanging(value);
					this.SendPropertyChanging();
					this._LastVisitDate = value;
					this.SendPropertyChanged("LastVisitDate");
					this.OnLastVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Agent", Storage="_Agent", ThisKey="Id", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Agent Agent
		{
			get
			{
				return this._Agent.Entity;
			}
			set
			{
				Agent previousValue = this._Agent.Entity;
				if (((previousValue != value) 
							|| (this._Agent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agent.Entity = null;
						previousValue.User = null;
					}
					this._Agent.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Agent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Customer", Storage="_Customer", ThisKey="Id", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.User = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StoreManager", Storage="_StoreManager", ThisKey="Id", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public StoreManager StoreManager
		{
			get
			{
				return this._StoreManager.Entity;
			}
			set
			{
				StoreManager previousValue = this._StoreManager.Entity;
				if (((previousValue != value) 
							|| (this._StoreManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreManager.Entity = null;
						previousValue.User = null;
					}
					this._StoreManager.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("StoreManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StoreUser", Storage="_StoreUser", ThisKey="Id", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public StoreUser StoreUser
		{
			get
			{
				return this._StoreUser.Entity;
			}
			set
			{
				StoreUser previousValue = this._StoreUser.Entity;
				if (((previousValue != value) 
							|| (this._StoreUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreUser.Entity = null;
						previousValue.User = null;
					}
					this._StoreUser.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("StoreUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInRole")]
	public partial class UserInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private int _RoleId;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UserInRole()
		{
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserInRole", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserInRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserInRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Webmaster")]
	public partial class Webmaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FirstName;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private string _City;
		
		private string _Phone;
		
		private string _ATM;
		
		private string _Bank;
		
		private string _CompanyName;
		
		private string _TaxCode;
		
		private System.Nullable<int> _AccountType;
		
		private string _ZipCode;
		
		private string _Address1;
		
		private System.Nullable<int> _Status;
		
		private string _VerifyCode;
		
		private string _NotificationNewProblem;
		
		private string _NotificationNewMessage;
		
		private string _NotificationNewOrder;
		
		private System.Nullable<System.DateTime> _DateJoin;
		
		private string _LastName;
		
		private string _Address2;
		
		private string _State;
		
		private string _Country;
		
		private EntitySet<ChatBox> _ChatBoxes;
		
		private EntitySet<Earning> _Earnings;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<Setting> _Settings;
		
		private EntitySet<Website> _Websites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnATMChanging(string value);
    partial void OnATMChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnTaxCodeChanging(string value);
    partial void OnTaxCodeChanged();
    partial void OnAccountTypeChanging(System.Nullable<int> value);
    partial void OnAccountTypeChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnVerifyCodeChanging(string value);
    partial void OnVerifyCodeChanged();
    partial void OnNotificationNewProblemChanging(string value);
    partial void OnNotificationNewProblemChanged();
    partial void OnNotificationNewMessageChanging(string value);
    partial void OnNotificationNewMessageChanged();
    partial void OnNotificationNewOrderChanging(string value);
    partial void OnNotificationNewOrderChanged();
    partial void OnDateJoinChanging(System.Nullable<System.DateTime> value);
    partial void OnDateJoinChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
		
		public Webmaster()
		{
			this._ChatBoxes = new EntitySet<ChatBox>(new Action<ChatBox>(this.attach_ChatBoxes), new Action<ChatBox>(this.detach_ChatBoxes));
			this._Earnings = new EntitySet<Earning>(new Action<Earning>(this.attach_Earnings), new Action<Earning>(this.detach_Earnings));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Settings = new EntitySet<Setting>(new Action<Setting>(this.attach_Settings), new Action<Setting>(this.detach_Settings));
			this._Websites = new EntitySet<Website>(new Action<Website>(this.attach_Websites), new Action<Website>(this.detach_Websites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ATM", DbType="NVarChar(50)")]
		public string ATM
		{
			get
			{
				return this._ATM;
			}
			set
			{
				if ((this._ATM != value))
				{
					this.OnATMChanging(value);
					this.SendPropertyChanging();
					this._ATM = value;
					this.SendPropertyChanged("ATM");
					this.OnATMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(50)")]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCode", DbType="NVarChar(50)")]
		public string TaxCode
		{
			get
			{
				return this._TaxCode;
			}
			set
			{
				if ((this._TaxCode != value))
				{
					this.OnTaxCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxCode = value;
					this.SendPropertyChanged("TaxCode");
					this.OnTaxCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="Int")]
		public System.Nullable<int> AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(10)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyCode", DbType="NVarChar(MAX)")]
		public string VerifyCode
		{
			get
			{
				return this._VerifyCode;
			}
			set
			{
				if ((this._VerifyCode != value))
				{
					this.OnVerifyCodeChanging(value);
					this.SendPropertyChanging();
					this._VerifyCode = value;
					this.SendPropertyChanged("VerifyCode");
					this.OnVerifyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationNewProblem", DbType="NVarChar(50)")]
		public string NotificationNewProblem
		{
			get
			{
				return this._NotificationNewProblem;
			}
			set
			{
				if ((this._NotificationNewProblem != value))
				{
					this.OnNotificationNewProblemChanging(value);
					this.SendPropertyChanging();
					this._NotificationNewProblem = value;
					this.SendPropertyChanged("NotificationNewProblem");
					this.OnNotificationNewProblemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationNewMessage", DbType="NVarChar(50)")]
		public string NotificationNewMessage
		{
			get
			{
				return this._NotificationNewMessage;
			}
			set
			{
				if ((this._NotificationNewMessage != value))
				{
					this.OnNotificationNewMessageChanging(value);
					this.SendPropertyChanging();
					this._NotificationNewMessage = value;
					this.SendPropertyChanged("NotificationNewMessage");
					this.OnNotificationNewMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationNewOrder", DbType="NVarChar(50)")]
		public string NotificationNewOrder
		{
			get
			{
				return this._NotificationNewOrder;
			}
			set
			{
				if ((this._NotificationNewOrder != value))
				{
					this.OnNotificationNewOrderChanging(value);
					this.SendPropertyChanging();
					this._NotificationNewOrder = value;
					this.SendPropertyChanged("NotificationNewOrder");
					this.OnNotificationNewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateJoin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateJoin
		{
			get
			{
				return this._DateJoin;
			}
			set
			{
				if ((this._DateJoin != value))
				{
					this.OnDateJoinChanging(value);
					this.SendPropertyChanging();
					this._DateJoin = value;
					this.SendPropertyChanged("DateJoin");
					this.OnDateJoinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(MAX)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Webmaster_ChatBox", Storage="_ChatBoxes", ThisKey="Id", OtherKey="WebmasterId")]
		public EntitySet<ChatBox> ChatBoxes
		{
			get
			{
				return this._ChatBoxes;
			}
			set
			{
				this._ChatBoxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Webmaster_Earning", Storage="_Earnings", ThisKey="Id", OtherKey="WebmasterId")]
		public EntitySet<Earning> Earnings
		{
			get
			{
				return this._Earnings;
			}
			set
			{
				this._Earnings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Webmaster_Payment", Storage="_Payments", ThisKey="Id", OtherKey="WebmasterId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Webmaster_Setting", Storage="_Settings", ThisKey="Id", OtherKey="WebmasterId")]
		public EntitySet<Setting> Settings
		{
			get
			{
				return this._Settings;
			}
			set
			{
				this._Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Webmaster_Website", Storage="_Websites", ThisKey="Id", OtherKey="WebmasterId")]
		public EntitySet<Website> Websites
		{
			get
			{
				return this._Websites;
			}
			set
			{
				this._Websites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChatBoxes(ChatBox entity)
		{
			this.SendPropertyChanging();
			entity.Webmaster = this;
		}
		
		private void detach_ChatBoxes(ChatBox entity)
		{
			this.SendPropertyChanging();
			entity.Webmaster = null;
		}
		
		private void attach_Earnings(Earning entity)
		{
			this.SendPropertyChanging();
			entity.Webmaster = this;
		}
		
		private void detach_Earnings(Earning entity)
		{
			this.SendPropertyChanging();
			entity.Webmaster = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Webmaster = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Webmaster = null;
		}
		
		private void attach_Settings(Setting entity)
		{
			this.SendPropertyChanging();
			entity.Webmaster = this;
		}
		
		private void detach_Settings(Setting entity)
		{
			this.SendPropertyChanging();
			entity.Webmaster = null;
		}
		
		private void attach_Websites(Website entity)
		{
			this.SendPropertyChanging();
			entity.Webmaster = this;
		}
		
		private void detach_Websites(Website entity)
		{
			this.SendPropertyChanging();
			entity.Webmaster = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Website")]
	public partial class Website : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WebmasterId;
		
		private string _Title;
		
		private string _URL;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _DateJoin;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<WebsiteOrder> _WebsiteOrders;
		
		private EntitySet<Script> _Scripts;
		
		private EntityRef<Webmaster> _Webmaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWebmasterIdChanging(int value);
    partial void OnWebmasterIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateJoinChanging(System.Nullable<System.DateTime> value);
    partial void OnDateJoinChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Website()
		{
			this._WebsiteOrders = new EntitySet<WebsiteOrder>(new Action<WebsiteOrder>(this.attach_WebsiteOrders), new Action<WebsiteOrder>(this.detach_WebsiteOrders));
			this._Scripts = new EntitySet<Script>(new Action<Script>(this.attach_Scripts), new Action<Script>(this.detach_Scripts));
			this._Webmaster = default(EntityRef<Webmaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebmasterId", DbType="Int NOT NULL")]
		public int WebmasterId
		{
			get
			{
				return this._WebmasterId;
			}
			set
			{
				if ((this._WebmasterId != value))
				{
					if (this._Webmaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebmasterIdChanging(value);
					this.SendPropertyChanging();
					this._WebmasterId = value;
					this.SendPropertyChanged("WebmasterId");
					this.OnWebmasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateJoin", DbType="Date")]
		public System.Nullable<System.DateTime> DateJoin
		{
			get
			{
				return this._DateJoin;
			}
			set
			{
				if ((this._DateJoin != value))
				{
					this.OnDateJoinChanging(value);
					this.SendPropertyChanging();
					this._DateJoin = value;
					this.SendPropertyChanged("DateJoin");
					this.OnDateJoinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Website_WebsiteOrder", Storage="_WebsiteOrders", ThisKey="Id", OtherKey="WebsiteId")]
		public EntitySet<WebsiteOrder> WebsiteOrders
		{
			get
			{
				return this._WebsiteOrders;
			}
			set
			{
				this._WebsiteOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Website_Script", Storage="_Scripts", ThisKey="Id", OtherKey="WebsiteId")]
		public EntitySet<Script> Scripts
		{
			get
			{
				return this._Scripts;
			}
			set
			{
				this._Scripts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Webmaster_Website", Storage="_Webmaster", ThisKey="WebmasterId", OtherKey="Id", IsForeignKey=true)]
		public Webmaster Webmaster
		{
			get
			{
				return this._Webmaster.Entity;
			}
			set
			{
				Webmaster previousValue = this._Webmaster.Entity;
				if (((previousValue != value) 
							|| (this._Webmaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Webmaster.Entity = null;
						previousValue.Websites.Remove(this);
					}
					this._Webmaster.Entity = value;
					if ((value != null))
					{
						value.Websites.Add(this);
						this._WebmasterId = value.Id;
					}
					else
					{
						this._WebmasterId = default(int);
					}
					this.SendPropertyChanged("Webmaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WebsiteOrders(WebsiteOrder entity)
		{
			this.SendPropertyChanging();
			entity.Website = this;
		}
		
		private void detach_WebsiteOrders(WebsiteOrder entity)
		{
			this.SendPropertyChanging();
			entity.Website = null;
		}
		
		private void attach_Scripts(Script entity)
		{
			this.SendPropertyChanging();
			entity.Website = this;
		}
		
		private void detach_Scripts(Script entity)
		{
			this.SendPropertyChanging();
			entity.Website = null;
		}
	}
}
#pragma warning restore 1591
